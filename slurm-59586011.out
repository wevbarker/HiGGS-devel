Changed directory to /home/wb263/HiGGS_development.

JobID: 59586011
======
Time: Wed 27 Apr 16:26:50 BST 2022
Running on master node: cpu-e-35
Current directory: /home/wb263/HiGGS_development

Nodes allocated:
================
cpu-e-35 cpu-e-36

numtasks=64, numnodes=2, mpi_tasks_per_node=32 (OMP_NUM_THREADS=1)

Executing command:
==================
mpirun -ppn 32 -np 64 /home/wb263/HiGGS_development/peta4_jobs.sh 

rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/stats/kernel-3.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’mkdir: cannot create directory ‘./bin/stats’: File exists
: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-0.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-9.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-9.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/samples’: File exists
rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/samples’: File exists
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/samples’rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle: File exists
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle

rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/samples’: File exists
rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/samples’: File exists
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’rm: cannot remove ‘./bin/samples/kernel-8.csv’: File exists
: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-10.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-8.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-1.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-6.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-16.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-11.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-12.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-15.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-5.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-2.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-14.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-13.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
rm: cannot remove ‘./bin/samples/kernel-3.csv’: Stale file handle
rm: cannot remove ‘./bin/samples/kernel-4.csv’: Stale file handle
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/stats’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
mkdir: cannot create directory ‘./bin/samples’: File exists
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
MathLink could not create temporary directory /tmp/MathLink: file exists
The program may not function correctly
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.

In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[2]:= In[2]:= 
In[2]:= In[2]:= 
In[3]:= 
In[2]:= In[2]:= 
In[2]:= 
In[2]:= In[2]:= In[2]:= 
In[2]:= In[2]:= 
In[2]:= 
In[2]:= 
In[2]:= 
In[2]:= In[2]:= In[2]:= In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[3]:= 
In[3]:= 
In[3]:= 
In[3]:= 
In[3]:= 
In[3]:= 
In[3]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[6]:= 
In[6]:= 
In[6]:= 
In[6]:= 
In[6]:= 
In[6]:= 
In[6]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[10]:= 
In[9]:= 
In[9]:= 
In[9]:= 
In[9]:= 
In[9]:= 
In[9]:= 
In[9]:= 
In[9]:= 
In[11]:= 
In[9]:= 
In[10]:= 
In[10]:= 
In[10]:= 
In[10]:= 
In[10]:= 
In[10]:= 
In[10]:= 
In[10]:= 
In[12]:= 
In[10]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[13]:= 
In[12]:= 
In[11]:= 
In[12]:= 
In[12]:= 
In[12]:= 
In[12]:= 
In[12]:= 
In[12]:= 
In[14]:= 
In[12]:= 
In[13]:= 
In[13]:= 
In[12]:= 
In[13]:= 
In[13]:= 
In[13]:= 
In[13]:= 
In[13]:= 
In[15]:= 
In[13]:= 
In[14]:= 
In[14]:= 
In[14]:= 
In[13]:= 
In[14]:= 
In[14]:= 
In[14]:= 
In[14]:= 
In[16]:= 
In[15]:= 
In[14]:= 
In[15]:= 
In[15]:= 
In[14]:= 
In[15]:= 
In[15]:= 
In[15]:= 
In[15]:= 
In[17]:= 
In[16]:= 
In[15]:= 
In[16]:= 
In[16]:= 
In[16]:= 
In[15]:= 
In[16]:= 
In[16]:= 
In[16]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[17]:= 
In[16]:= 
In[17]:= 
In[17]:= 
In[17]:= 
In[16]:= 
In[17]:= 
In[19]:= 
In[17]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[20]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[21]:= 
In[19]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[19]:= 
In[22]:= 
In[19]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[23]:= 
In[19]:= 
In[18]:= In[18]:= In[18]:= 
In[20]:= In[18]:= 
In[20]:= 
In[18]:= In[18]:= 
In[19]:= 
In[20]:= In[18]:= In[18]:= 
In[20]:= 
In[21]:= 
In[20]:= 
In[21]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[21]:= 
In[19]:= 
In[22]:= 
In[21]:= 
In[20]:= 
In[23]:= 
In[22]:= 
In[21]:= 
In[23]:= 
In[22]:= 
In[22]:= 
In[23]:= 
In[20]:= 
In[22]:= 
In[23]:= 
In[21]:= 
In[23]:= 
In[20]:= 
In[23]:= 
In[22]:= 
In[21]:= 
In[23]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[22]:= 
In[23]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
Mathematica 12.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2020 Wolfram Research, Inc.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[1]:= 
In[1]:= Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[2]:= In[2]:= 
In[8]:= 
In[3]:= 
In[9]:= 
In[4]:= 
In[10]:= 
In[5]:= 
In[11]:= 
In[6]:= 
In[12]:= 
In[7]:= 
In[13]:= 
In[8]:= 
In[14]:= 
In[9]:= 
In[15]:= 
In[10]:= 
In[16]:= 
In[11]:= 
In[17]:= 
In[12]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[13]:= 
In[19]:= 
In[14]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[15]:= 
In[23]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[2]:= In[2]:= 
In[3]:= 
In[2]:= In[2]:= 
In[4]:= 
In[3]:= 
In[5]:= 
In[4]:= 
In[6]:= 
In[5]:= 
In[7]:= 
In[6]:= 
In[8]:= 
In[7]:= 
In[9]:= 
In[8]:= 
In[10]:= 
In[9]:= 
In[11]:= 
In[10]:= 
In[12]:= 
In[11]:= 
In[13]:= 
In[12]:= 
In[14]:= 
In[13]:= 
In[2]:= In[2]:= 
In[15]:= 
In[14]:= 
In[3]:= 
In[16]:= 
In[2]:= In[2]:= 
In[15]:= 
In[4]:= 
In[17]:= 
In[3]:= 
In[16]:= 
In[18]:= In[18]:= 
In[5]:= In[18]:= In[18]:= 
In[4]:= 
In[19]:= 
In[17]:= 
In[6]:= 
In[20]:= 
In[5]:= 
In[21]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[22]:= 
In[7]:= 
In[23]:= 
In[19]:= 
In[6]:= 
In[20]:= 
In[8]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[7]:= 
In[9]:= 
In[8]:= 
In[10]:= 
In[9]:= 
In[11]:= 
In[10]:= 
In[12]:= 
In[13]:= 
In[11]:= 
In[14]:= 
In[12]:= 
In[15]:= 
In[13]:= 
In[16]:= 
In[14]:= 
In[17]:= 
In[15]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[16]:= 
In[19]:= 
In[20]:= 
In[17]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= Connection established.
Connection established.
Connection established.

In[21]:= Connection established.

In[22]:= Connection established.

In[23]:= ------------------------------------------------------------
Connection established.
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
------------------------------------------------------------
Connection established.
Connection established.
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
------------------------------------------------------------
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connecting to external linux executable...
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
Connecting to external linux executable...
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connecting to external linux executable...
Connection established.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
------------------------------------------------------------
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
Connecting to external linux executable...
Connecting to external linux executable...
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

In[1]:= Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
------------------------------------------------------------
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
------------------------------------------------------------
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Variable $PrePrint assigned value ScreenDollarIndices
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Variable $CovDFormat changed from Prefix to Postfix
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Variable $PrePrint assigned value ScreenDollarIndices
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Variable $CovDFormat changed from Prefix to Postfix
** Option MetricOn of MakeRule changed from None to All
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option ContractMetrics of MakeRule changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= ------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.

In[9]:= ------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.

In[10]:= 
In[11]:= ** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 

In[12]:= ** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol sigma. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol sigma. 

In[13]:= ** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False

In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[1]:= ------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[1]:= ------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option ContractMetrics of MakeRule changed from False to True
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True

In[2]:= In[2]:= 
In[2]:= In[2]:= 
In[3]:= 
In[3]:= 
In[4]:= 
In[4]:= 
In[5]:= 
In[5]:= 
In[6]:= 
In[6]:= 
In[7]:= 
In[7]:= 
In[8]:= 
In[8]:= 
In[9]:= 
In[9]:= 
In[10]:= ------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}

In[10]:= CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[11]:= 
In[11]:= 
In[12]:= 
In[12]:= 
In[13]:= 
In[13]:= 
In[14]:= 
In[14]:= 
In[15]:= 
In[15]:= 
In[16]:= 
In[16]:= 
In[17]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[19]:= 
In[20]:= 
In[20]:= 
In[21]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False

In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= 
In[1]:= ------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[1]:= 
In[1]:= 
In[1]:= 
In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[1]:= 
In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[2]:= In[2]:= 
In[6]:= 
In[3]:= 
In[7]:= 
In[4]:= 
In[8]:= 
In[1]:= 
In[5]:= 
In[9]:= 
In[6]:= 
In[10]:= 
In[7]:= 
In[11]:= 
In[1]:= 
In[1]:= 
In[8]:= 
In[12]:= 
In[9]:= 
In[13]:= 
In[10]:= 
In[14]:= 
In[11]:= 
In[15]:= 
In[12]:= 
In[16]:= 
In[13]:= 
In[17]:= 
In[14]:= 
In[1]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[15]:= 
In[20]:= 
In[21]:= 
In[16]:= 
In[22]:= 
In[23]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[1]:= ------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True

In[1]:= 
In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= 
In[11]:= 
In[2]:= In[2]:= 
In[12]:= 
In[3]:= 
In[13]:= ------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[4]:= 
In[14]:= 
In[5]:= 
In[15]:= 
In[6]:= 
In[16]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[1]:= 
In[7]:= 
In[17]:= 
In[8]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[9]:= ** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 

In[20]:= ** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False

In[21]:= 
In[10]:= 
In[22]:= 
In[23]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[2]:= In[2]:= 
In[2]:= In[2]:= 
In[16]:= 
In[3]:= 
In[3]:= 
In[17]:= 
In[4]:= 
In[4]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[5]:= 
In[19]:= 
In[5]:= 
In[20]:= 
In[6]:= 
In[6]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[2]:= 
In[7]:= In[2]:= 
In[7]:= 
In[8]:= 
In[3]:= 
In[8]:= 
In[9]:= 
In[4]:= 
In[9]:= 
In[10]:= 
In[5]:= 
In[10]:= 
In[11]:= 
In[6]:= 
In[11]:= 
In[2]:= In[2]:= 
In[7]:= 
In[12]:= 
In[12]:= 
In[3]:= 
In[8]:= 
In[13]:= 
In[13]:= 
In[4]:= 
In[9]:= 
In[14]:= 
In[2]:= In[2]:= 
In[14]:= ------------------------------------------------------------

In[5]:= Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[10]:= 
In[15]:= 
In[3]:= 
In[6]:= 
In[15]:= 
In[11]:= 
In[16]:= 
In[4]:= 
In[7]:= 
In[16]:= 
In[12]:= 
In[17]:= 
In[5]:= 
In[8]:= 
In[17]:= 
In[13]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[6]:= 
In[9]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[14]:= 
In[20]:= 
In[19]:= 
In[21]:= 
In[7]:= 
In[10]:= 
In[22]:= 
In[15]:= 
In[20]:= 
In[23]:= 
In[21]:= 
In[8]:= 
In[11]:= 
In[22]:= 
In[16]:= 
In[23]:= 
In[1]:= 
In[9]:= 
In[1]:= 
In[12]:= 
In[17]:= 
In[10]:= 
In[13]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[11]:= 
In[14]:= 
In[20]:= 
In[15]:= 
In[21]:= 
In[12]:= 
In[22]:= 
In[23]:= 
In[16]:= 
In[13]:= 
In[17]:= 
In[14]:= 
In[1]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[15]:= 
In[19]:= 
In[16]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[1]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[1]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[2]:= In[2]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[1]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[1]:= 
In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[2]:= In[2]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[6]:= 
In[3]:= 
In[7]:= 
In[4]:= 
In[8]:= 
In[5]:= 
In[9]:= 
In[6]:= 
In[10]:= 
In[7]:= 
In[11]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[8]:= 
In[12]:= 
In[9]:= 
In[13]:= 
In[10]:= ------------------------------------------------------------

In[14]:= Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[11]:= 
In[15]:= 
In[12]:= 
In[16]:= 
In[13]:= Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...

In[17]:= Connecting to external linux executable...
Connecting to external linux executable...

In[14]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[15]:= 
In[19]:= 
In[20]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}

In[16]:= CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[21]:= 
In[22]:= 
In[23]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= Connecting to external linux executable...

In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[1]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
** Variable $CovDFormat changed from Postfix to Prefix
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
** Option CurvatureRelations of DefCovD changed from False to True
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[1]:= ------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[2]:= In[2]:= 
In[3]:= 
In[2]:= In[2]:= 
In[4]:= 
In[3]:= 
In[5]:= 
In[2]:= In[2]:= 
In[4]:= 
In[6]:= 
In[3]:= 
In[5]:= 
In[7]:= 
In[6]:= 
In[8]:= 
In[7]:= 
In[9]:= 
In[4]:= 
In[8]:= 
In[10]:= 
In[5]:= 
In[6]:= 
In[2]:= In[2]:= 
In[9]:= 
In[11]:= 
In[7]:= 
In[10]:= 
In[12]:= 
In[11]:= 
In[13]:= 
In[12]:= 
In[14]:= 
In[3]:= 
In[13]:= 
In[15]:= 
In[8]:= 
In[4]:= 
In[14]:= 
In[16]:= 
In[9]:= 
In[5]:= 
In[15]:= 
In[17]:= 
In[10]:= Connecting to external linux executable...

In[6]:= ------------------------------------------------------------

In[16]:= Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[11]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[7]:= 
In[17]:= 
In[12]:= 
In[20]:= 
In[21]:= 
In[8]:= 
In[18]:= In[18]:= 
In[22]:= In[18]:= In[18]:= 
In[13]:= 
In[23]:= 
In[19]:= 
In[9]:= 
In[14]:= 
In[20]:= 
In[21]:= 
In[10]:= 
In[22]:= 
In[23]:= 
In[15]:= 
In[11]:= 
In[16]:= 
In[12]:= 
In[17]:= Connecting to external linux executable...
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
------------------------------------------------------------
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[13]:= 
In[18]:= In[18]:= Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
In[18]:= In[18]:= 
In[19]:= 
In[14]:= 
In[20]:= 
In[21]:= 
In[15]:= ------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[22]:= 
In[23]:= 
In[16]:= 
In[17]:= ------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
Connection established.
Connection established.
Connection established.
Connection established.
Connection established.
Connection established.
Connection established.
Connection established.
Connection established.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[2]:= In[2]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix

In[2]:= In[2]:= ** Option CurvatureRelations of DefCovD changed from False to True

In[3]:= 
In[3]:= 
In[4]:= 
In[4]:= 
In[5]:= 
In[5]:= 
In[6]:= 
In[6]:= 
In[7]:= 
In[7]:= 
In[8]:= 
In[8]:= 
In[9]:= 
In[9]:= 
In[10]:= 
In[10]:= 
In[11]:= 
In[11]:= 
In[12]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[13]:= 
In[15]:= 
In[14]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[16]:= 
In[15]:= 
In[17]:= 
In[16]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[18]:= In[18]:= In[18]:= 
In[17]:= In[18]:= 
In[19]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[20]:= 
In[19]:= 
In[21]:= 
In[22]:= 
In[23]:= Connecting to external linux executable...

In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= Connecting to external linux executable...
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connecting to external linux executable...
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connection established.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connecting to external linux executable...
Connecting to external linux executable...
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
Connection established.
Connection established.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

In[1]:= 
In[1]:= Connection established.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[2]:= In[2]:= 
In[2]:= In[2]:= 
In[3]:= 
In[3]:= 
In[4]:= 
In[4]:= 
In[5]:= 
In[5]:= 
In[6]:= 
In[6]:= 
In[7]:= 
In[7]:= Connecting to external linux executable...

In[8]:= 
In[8]:= 
In[9]:= 
In[9]:= 
In[10]:= 
In[10]:= 
In[11]:= 
In[11]:= 
In[12]:= 
In[12]:= 
In[13]:= 
In[13]:= 
In[14]:= 
In[14]:= 
In[15]:= 
In[15]:= 
In[16]:= 
In[16]:= 
In[17]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= ------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.

In[19]:= 
In[20]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[21]:= 
In[23]:= 
In[22]:= 
In[23]:= ** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
------------------------------------------------------------
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Variable $CovDFormat changed from Prefix to Postfix
** Variable $PrePrint assigned value ScreenDollarIndices
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Variable $CovDFormat changed from Prefix to Postfix
** Option MetricOn of MakeRule changed from None to All
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option ContractMetrics of MakeRule changed from False to True
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Variable $PrePrint assigned value ScreenDollarIndices
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option ContractMetrics of MakeRule changed from False to True
** Variable $CovDFormat changed from Prefix to Postfix
** Variable $PrePrint assigned value ScreenDollarIndices
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Variable $CovDFormat changed from Prefix to Postfix
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

In[1]:= ------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Variable $PrePrint assigned value ScreenDollarIndices
** DefConstantSymbol: Defining constant symbol dim. 
** Variable $CovDFormat changed from Prefix to Postfix
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** Variable $CommuteCovDsOnScalars changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Option MetricOn of MakeRule changed from None to All
** Variable $CovDFormat changed from Prefix to Postfix
** Option ContractMetrics of MakeRule changed from False to True
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= ------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
------------------------------------------------------------
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
------------------------------------------------------------
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
Connecting to external linux executable...
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[7]:= Connecting to external linux executable...

In[8]:= 
In[9]:= ------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.

In[10]:= 
In[11]:= 
In[12]:= ** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
------------------------------------------------------------
** Option AllowUpperDerivatives of ContractMetric changed from False to True
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** Option MetricOn of MakeRule changed from None to All
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.

In[13]:= 
In[14]:= 
In[15]:= ** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
------------------------------------------------------------

In[16]:= Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False

In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= ** DefConstantSymbol: Defining constant symbol sigma. 

In[20]:= 
In[21]:= ** DefConstantSymbol: Defining constant symbol dim. 

In[22]:= ** Option CurvatureRelations of DefCovD changed from True to False

In[23]:= ** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
Connection established.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[2]:= In[2]:= 
In[2]:= 
In[2]:= 
In[2]:= In[2]:= In[2]:= In[2]:= 
In[2]:= 
In[2]:= 
In[2]:= In[2]:= In[2]:= In[2]:= 
In[3]:= Connecting to external linux executable...

In[3]:= 
In[3]:= 
In[3]:= 
In[3]:= 
In[3]:= 
In[3]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[4]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[5]:= 
In[6]:= 
In[6]:= 
In[6]:= 
In[6]:= ------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.

In[6]:= 
In[6]:= 
In[6]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[7]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[8]:= 
In[9]:= 
In[9]:= 
In[9]:= 
In[9]:= ** DefConstantSymbol: Defining constant symbol sigma. 

In[9]:= 
In[9]:= 
In[9]:= 
In[10]:= ** DefConstantSymbol: Defining constant symbol dim. 

In[10]:= ** Option CurvatureRelations of DefCovD changed from True to False

In[10]:= ** Variable $CommuteCovDsOnScalars changed from True to False

In[10]:= 
In[10]:= 
In[10]:= 
In[10]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[11]:= 
In[12]:= 
In[12]:= 
In[12]:= 
In[12]:= 
In[12]:= 
In[12]:= 
In[12]:= 
In[13]:= 
In[13]:= 
In[13]:= 
In[13]:= 
In[13]:= 
In[13]:= 
In[13]:= 
In[14]:= 
In[14]:= 
In[14]:= 
In[14]:= 
In[14]:= 
In[14]:= 
In[14]:= 
In[15]:= 
In[15]:= 
In[15]:= 
In[15]:= 
In[15]:= 
In[15]:= 
In[15]:= 
In[16]:= 
In[16]:= 
In[16]:= 
In[16]:= 
In[16]:= 
In[16]:= 
In[16]:= 
In[17]:= 
In[17]:= 
In[17]:= 
In[17]:= 
In[17]:= 
In[17]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[18]:= In[18]:= 
In[18]:= In[18]:= 
In[18]:= In[18]:= In[18]:= In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= In[18]:= 
In[19]:= 
In[19]:= 
In[20]:= 
In[19]:= 
In[19]:= 
In[19]:= 
In[21]:= 
In[20]:= 
In[20]:= 
In[20]:= 
In[22]:= 
In[21]:= 
In[23]:= 
In[20]:= 
In[20]:= 
In[21]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[22]:= 
In[21]:= 
In[23]:= 
In[21]:= 
In[22]:= 
In[21]:= 
In[23]:= 
In[23]:= 
In[22]:= 
In[22]:= 
In[22]:= 
In[23]:= 
In[23]:= 
In[23]:= ------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...
Connecting to external linux executable...

In[1]:= 
In[1]:= ------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
Connection established.
Connection established.
Connection established.
Connection established.
Connection established.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[2]:= In[2]:= 
In[2]:= In[2]:= 
In[3]:= 
In[3]:= 
In[4]:= 
In[4]:= 
In[5]:= 
In[5]:= 
In[6]:= 
In[6]:= 
In[7]:= 
In[7]:= 
In[8]:= 
In[8]:= 
In[9]:= 
In[9]:= 
In[10]:= 
In[10]:= 
In[11]:= 
In[11]:= 
In[12]:= 
In[12]:= 
In[13]:= 
In[13]:= 
In[14]:= 
In[14]:= 
In[15]:= 
In[15]:= 
In[16]:= 
In[16]:= 
In[17]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[18]:= In[18]:= 
In[19]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[20]:= 
In[22]:= 
In[23]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[1]:= ------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix

In[9]:= ** Option CurvatureRelations of DefCovD changed from False to True

In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
------------------------------------------------------------
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Option ContractMetrics of MakeRule changed from False to True
** Option ContractMetrics of MakeRule changed from False to True
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
Connection established.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[1]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[1]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[2]:= In[2]:= 
In[7]:= 
In[3]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.

In[8]:= ** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True

In[4]:= 
In[9]:= 
In[5]:= 
In[10]:= 
In[6]:= 
In[11]:= 
In[7]:= 
In[12]:= 
In[8]:= 
In[13]:= 
In[9]:= 
In[14]:= 
In[10]:= 
In[15]:= 
In[11]:= 
In[16]:= 
In[12]:= 
In[17]:= 
In[13]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[14]:= 
In[19]:= 
In[20]:= 
In[15]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[16]:= ------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.

In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= ------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.

In[20]:= 
In[21]:= 
In[22]:= ** DefConstantSymbol: Defining constant symbol sigma. 

In[23]:= ** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[1]:= 
In[1]:= ------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[2]:= In[2]:= 
In[7]:= 
In[3]:= 
In[8]:= 
In[4]:= 
In[9]:= 
In[5]:= 
In[10]:= 
In[6]:= 
In[11]:= ------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[7]:= 
In[12]:= 
In[8]:= 
In[13]:= 
In[9]:= 
In[14]:= 
In[1]:= 
In[10]:= 
In[15]:= 
In[11]:= 
In[16]:= 
In[12]:= 
In[17]:= 
In[13]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[14]:= 
In[20]:= 
In[21]:= 
In[15]:= 
In[22]:= 
In[23]:= 
In[16]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[1]:= 
In[20]:= Connecting to external linux executable...

In[21]:= ------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[2]:= In[2]:= 
In[2]:= In[2]:= 
In[3]:= 
In[3]:= ------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

In[4]:= 
In[4]:= 
In[5]:= 
In[5]:= 
In[6]:= 
In[6]:= 
In[7]:= 
In[7]:= 
In[8]:= 
In[8]:= 
In[9]:= 
In[9]:= 
In[10]:= 
In[10]:= 
In[11]:= 
In[11]:= 
In[12]:= 
In[12]:= 
In[13]:= 
In[13]:= 
In[14]:= 
In[14]:= 
In[15]:= 
In[15]:= 
In[16]:= 
In[16]:= 
In[17]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[19]:= 
In[20]:= 
In[20]:= 
In[21]:= 
In[21]:= 
In[22]:= 
In[22]:= 
In[23]:= 
In[23]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connecting to external linux executable...
Connecting to external linux executable...
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
Connecting to external linux executable...
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
Connection established.
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
Connection established.
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True

In[1]:= ** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= ------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[9]:= ------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.

In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[16]:= 
In[1]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True

In[1]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[1]:= Connecting to external linux executable...

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}

In[20]:= CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[21]:= 
In[22]:= 
In[23]:= 
In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= ------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[15]:= 
In[16]:= 
In[17]:= Connection established.

In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= ------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.

In[21]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
Connecting to external linux executable...
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.

In[1]:= ------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True

In[1]:= 
In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connecting to external linux executable...
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

In[2]:= In[2]:= 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= In[18]:= In[18]:= In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= ------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`xPerm`  version 1.2.3, {2015, 8, 23}
CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public\
 
>   License.
Connecting to external linux executable...
Connection established.
------------------------------------------------------------
Package xAct`xTensor`  version 1.2.0, {2021, 10, 17}
CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the General Public\
 
>   License.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xPert`  version 1.0.6, {2018, 2, 28}
CopyRight (C) 2005-2020, David Brizuela, Jose M. Martin-Garcia and Guillermo\
 
>   A. Mena Marugan, under the General Public License.
** Variable $PrePrint assigned value ScreenDollarIndices
** Variable $CovDFormat changed from Prefix to Postfix
** Option AllowUpperDerivatives of ContractMetric changed from False to True
** Option MetricOn of MakeRule changed from None to All
** Option ContractMetrics of MakeRule changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`Invar`  version 2.0.5, {2013, 7, 1}
CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes and R. Portugal,\
 
>   under the General Public License.
** DefConstantSymbol: Defining constant symbol sigma. 
** DefConstantSymbol: Defining constant symbol dim. 
** Option CurvatureRelations of DefCovD changed from True to False
** Variable $CommuteCovDsOnScalars changed from True to False
------------------------------------------------------------
Package xAct`xCoba`  version 0.8.6, {2021, 2, 28}
CopyRight (C) 2005-2021, David Yllanes and Jose M. Martin-Garcia, under the\
 
>   General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
Package xAct`SymManipulator`  version 0.9.5, {2021, 9, 14}
CopyRight (C) 2011-2021, Thomas Bäckdahl, under the General Public License.
------------------------------------------------------------
Package xAct`xTras`  version 1.4.2, {2014, 10, 30}
CopyRight (C) 2012-2014, Teake Nutma, under the General Public License.
** Variable $CovDFormat changed from Postfix to Prefix
** Option CurvatureRelations of DefCovD changed from False to True
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

In[24]:= 
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

** DefManifold: Defining manifold M4. 
General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol Prt. 
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.


Syntax::sntufn: Unknown unicode longname Application.
Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 

Syntax::sntufn: Unknown unicode longname Application.


Syntax::sntufn: Unknown unicode longname Application.
Syntax::sntufn: Unknown unicode longname Application.


Syntax::sntufn: Unknown unicode longname Application.Syntax::sntufn: Unknown unicode longname Application.



Syntax::sntufn: Unknown unicode longname Application.
Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1} have been declared as UpValues for PR6.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
   Rules {1, 2} have been declared as DownValues for T1.
			(...replotting...)
   Rules {1} have been declared as UpValues for PT1.
   Rules {1, 2} have been declared as DownValues for T1.
			(...replotting...)
			(...replotting...)
			(...replotting...)
   Rules {1} have been declared as UpValues for PT2.
			(...replotting...)
			(...replotting...)
			(...replotting...)
   Rules {1} have been declared as UpValues for PT3.
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
			(...replotting...)
			(...replotting...)
			(...replotting...)
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
			(...replotting...)
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
			(...replotting...)
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Rs[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol cBet1. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
   Rules {1} have been declared as UpValues for PR1.
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR6.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT3.
** DefTensor: Defining tensor H[-a, c]. 
   Rules {1} have been declared as UpValues for PT3.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1} have been declared as UpValues for PT2.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rc[a, -b]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
			(...replotting...)
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
   Rules {1} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
			(...replotting...)
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol Alp1. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol mBet2. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol mBet3. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol mBet4. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DVDB.
			(...replotting...)
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor X[k]. 
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as UpValues for Ji.
			(...replotting...)
			(...replotting...)
			(...replotting...)
   Rules {1} have been declared as UpValues for Lapse.
			(...replotting...)
			(...replotting...)
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
			(...replotting...)
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefConstantSymbol: Defining constant symbol Prt. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor APhi[-a, -b, -c]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor PPerpT0p[e, f]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor Tc[-a]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJDB.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefTensor: Defining tensor DJ[-a]. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
   Rules {1} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor PhiB0p[]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UA2p.
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp0m[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
 ** ToNewCanonical...
 ** ToNewCanonical...
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
 ** ToNewCanonical...
 ** ToNewCanonical...
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor RPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.

** DefTensor: Defining tensor Rc[a, -b]. 
StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol Prt. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefConstantSymbol: Defining constant symbol gAlp6. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor R4[-i, -j]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= ** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 

In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefConstantSymbol: Defining constant symbol Prt. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor Rc[a, -b]. 
The working directory is /home/wb263/HiGGS_development
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefConstantSymbol: Defining constant symbol cAlp6. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 

** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
   Rules {1} have been declared as DownValues for DHDB.
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Prt. 
   Rules {1} have been declared as DownValues for DJDB.
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for V.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
   Rules {1, 2} have been declared as DownValues for DpUB2p.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor HComp[]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor Q[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefVBundle: Defining vbundle TangentM4. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefConstantSymbol: Defining constant symbol Prt. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor DTP0m[-z]. 

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1} have been declared as UpValues for PR5.
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT1.
 ** ToNewCanonical...
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefTensor: Defining tensor RLambda6[]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor ChiParaA0p[]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as UpValues for V.
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor HComp[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
   Rules {1} have been declared as DownValues for DVDB.
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
   Rules {1} have been declared as DownValues for DHDB.
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DLapseDB.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as DownValues for DVDB.

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1} have been declared as UpValues for H.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefManifold: Defining manifold M4. 
   Rules {1} have been declared as UpValues for Ji.
** DefVBundle: Defining vbundle TangentM4. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1} have been declared as DownValues for DJiDB.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1} have been declared as DownValues for DLapseDB.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefManifold: Defining manifold M4. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefVBundle: Defining vbundle TangentM4. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor T2[-i]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1} have been declared as UpValues for PT3.
** DefTensor: Defining tensor Spin3[-i]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor Rs[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as UpValues for PR1.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
   Rules {1} have been declared as UpValues for PR2.
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
   Rules {1} have been declared as UpValues for PR3.
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
   Rules {1} have been declared as UpValues for PR4.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1} have been declared as UpValues for PR5.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
   Rules {1} have been declared as UpValues for PR6.
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefTensor: Defining tensor DJ[-a]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
   Rules {1} have been declared as UpValues for PT1.
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
   Rules {1} have been declared as UpValues for PT2.
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1} have been declared as UpValues for PT3.
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol Alp2. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol Bet5. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefVBundle: Defining vbundle TangentM4. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
   Rules {1} have been declared as UpValues for PR2.
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
   Rules {1} have been declared as UpValues for PR3.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
   Rules {1} have been declared as UpValues for PR4.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
   Rules {1} have been declared as UpValues for PR5.
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefTensor: Defining tensor G3[-a, -b]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

** DefConstantSymbol: Defining constant symbol gBet6. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
   Rules {1} have been declared as UpValues for PR6.
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 

In[24]:= ** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 

In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefCovD: Defining covariant derivative CD[-a]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefManifold: Defining manifold M4. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
   Rules {1} have been declared as UpValues for PT2.
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
   Rules {1} have been declared as UpValues for PT3.
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefTensor: Defining tensor DTP0m[-z]. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 

** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefConstantSymbol: Defining constant symbol cBet4. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefConstantSymbol: Defining constant symbol cBet5. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol Bet4. 
   Rules {1} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor T2[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor R5[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor T2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor Q[-a, -b]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor HComp[]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor PPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor HComp[]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor X[k]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1} have been declared as UpValues for PR2.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
** DefTensor: Defining tensor V[-a]. 
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 

In[24]:= ** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 

In[25]:= ** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefManifold: Defining manifold M4. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefVBundle: Defining vbundle TangentM4. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol Prt. 
   Rules {1} have been declared as UpValues for G3.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
			(...replotting...)
			(...replotting...)
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor R5[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor HComp[]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor X[k]. 
** DefConstantSymbol: Defining constant symbol Prt. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor TP[-a, -b, -c]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefTensor: Defining tensor T2[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefTensor: Defining tensor T3[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefManifold: Defining manifold M4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefVBundle: Defining vbundle TangentM4. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor T2[-i]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for H.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for PT1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor BPiP[-a, -c]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
 ** ToNewCanonical...

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor DpV[-z, -a]. 
 ** ToNewCanonical...
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor ChiParaB0m[]. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor R5[-i, -j]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor R6[]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor T2[-i]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor T3[-i]. 
** DefVBundle: Defining vbundle TangentM4. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor ChiParaA0p[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor ChiParaA0m[]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------
   Rules {1, 2} have been declared as DownValues for R4.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 

In[24]:= 
In[24]:= ** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 

In[25]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1, 2} have been declared as DownValues for T1.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.


FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefManifold: Defining manifold M4. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefVBundle: Defining vbundle TangentM4. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1, 2} have been declared as DownValues for DRP2p.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor T2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor TP[-a, -b, -c]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefManifold: Defining manifold M4. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for T1.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor T2[-i]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor T3[-i]. 

In[24]:= 
In[24]:= 
In[25]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefManifold: Defining manifold M4. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefManifold: Defining manifold M4. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
** DefTensor: Defining tensor Spin3[-i]. 
** DefCovD: Defining covariant derivative CD[-a]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= ** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 

In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefVBundle: Defining vbundle TangentM4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 

In[24]:= ** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefVBundle: Defining vbundle TangentM4. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 

In[25]:= ** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

** DefConstantSymbol: Defining constant symbol cPerpB1p. 
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.


StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
 ** ToNewCanonical...
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefManifold: Defining manifold M4. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
   Rules {1} have been declared as UpValues for PT3.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 

In[24]:= 
In[24]:= 
In[24]:= 
In[25]:= 
StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

In[24]:= 
In[25]:= ** DefTensor: Defining tensor TLambda2[-i]. 

In[24]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

In[25]:= 
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor Rc[a, -b]. 
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor TLambda3[-i]. 
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefConstantSymbol: Defining constant symbol Prt. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor TLambda3[-i]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefManifold: Defining manifold M4. 
** DefManifold: Defining manifold M4. 
** DefManifold: Defining manifold M4. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol Prt. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefManifold: Defining manifold M4. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor T3[-i]. 
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefVBundle: Defining vbundle TangentM4. 

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefVBundle: Defining vbundle TangentM4. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefVBundle: Defining vbundle TangentM4. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefConstantSymbol: Defining constant symbol Prt. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.

** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor R4[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
   Rules {1} have been declared as UpValues for PR2.
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefTensor: Defining tensor R6[]. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor R6[]. 
   Rules {1} have been declared as UpValues for PR3.
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
   Rules {1} have been declared as UpValues for PR4.
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for J.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
** DefTensor: Defining tensor Spin3[-i]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
   Rules {1} have been declared as UpValues for PR6.
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT2.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 

In[24]:= ** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 

In[25]:= 
In[24]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2} have been declared as UpValues for H.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor A[a, c, -d]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1} have been declared as UpValues for PR3.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor G3[-a, -b]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.


Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.


Syntax::sntufn: Unknown unicode longname Application.
General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor Rc[a, -b]. 
   Rules {1, 2} have been declared as DownValues for R4.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor T2[-i]. 
   Rules {1} have been declared as UpValues for PR3.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefManifold: Defining manifold M4. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefVBundle: Defining vbundle TangentM4. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Rs[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefTensor: Defining tensor T2[-i]. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefTensor: Defining tensor T3[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor T2[-i]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor T2[-i]. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor T3[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor T2[-i]. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor T2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefConstantSymbol: Defining constant symbol mAlp5. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefConstantSymbol: Defining constant symbol mAlp6. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor HComp[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
   Rules {1, 2} have been declared as UpValues for V.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol Prt. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as DownValues for DVDB.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1} have been declared as DownValues for DHDB.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Rs[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor TLambda2[-i]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2} have been declared as UpValues for X.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
   Rules {1} have been declared as DownValues for DVDB.
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor R5[-i, -j]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR2.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol Bet6. 
   Rules {1} have been declared as UpValues for PR3.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor T2[-i]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor T3[-i]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for PT3.
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR6.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor H[-a, c]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for J.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor Q[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1} have been declared as UpValues for PT2.
** DefConstantSymbol: Defining constant symbol gAlp1. 
   Rules {1} have been declared as UpValues for PR3.
** DefConstantSymbol: Defining constant symbol gAlp2. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for PT1.
** DefConstantSymbol: Defining constant symbol gAlp5. 
   Rules {1} have been declared as UpValues for PT3.
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for PT3.
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
   Rules {1} have been declared as UpValues for PR4.
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
   Rules {1} have been declared as UpValues for Lapse.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PT3.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefConstantSymbol: Defining constant symbol cBet1. 
   Rules {1} have been declared as UpValues for PR6.
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol cBet5. 
   Rules {1} have been declared as UpValues for Lapse.
** DefConstantSymbol: Defining constant symbol cBet6. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
   Rules {1} have been declared as UpValues for PT3.
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor Rs[]. 
   Rules {1} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol Alp0. 
   Rules {1} have been declared as UpValues for PR1.
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefTensor: Defining tensor X[k]. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
   Rules {1} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2} have been declared as UpValues for X.
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefConstantSymbol: Defining constant symbol Bet3. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor HComp[]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor TPerp[-a, -b]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
   Rules {1} have been declared as DownValues for DVDB.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefTensor: Defining tensor X[k]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
   Rules {1, 2} have been declared as UpValues for X.
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
   Rules {1} have been declared as DownValues for DJDB.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
   Rules {1} have been declared as UpValues for Lapse.
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefTensor: Defining tensor HComp[]. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
   Rules {1, 2} have been declared as UpValues for V.
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol gAlp3. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol mBet4. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
   Rules {1} have been declared as DownValues for DVDB.
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DHDB.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1} have been declared as DownValues for DJDB.
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol Alp5. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
   Rules {1} have been declared as UpValues for V.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor HComp[]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor PPerp[-a, -b]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor DJiDB[-c, d]. 
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor HComp[]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1, 2} have been declared as UpValues for X.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DJiDB.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
   Rules {1} have been declared as DownValues for DHDB.
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as DownValues for DLapseDB.
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
   Rules {1} have been declared as DownValues for DLapseDB.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
   Rules {1} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
   Rules {1} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefTensor: Defining tensor X[k]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
   Rules {1} have been declared as UpValues for Ji.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefTensor: Defining tensor DJ[-a]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
   Rules {1, 2} have been declared as UpValues for X.
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
   Rules {1} have been declared as UpValues for Lapse.
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefTensor: Defining tensor X[k]. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor Q[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor Q[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor Q[-a, -b]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor Q[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PB0p[c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PhiB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor ChiB1m[-a]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
			(...replotting...)
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor PhiA0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefTensor: Defining tensor PhiA0m[]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefTensor: Defining tensor PhiA0p[]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefTensor: Defining tensor DpUA0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
			(...replotting...)
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PA0p[c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefTensor: Defining tensor DTP0m[-z]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PhiB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor ChiSingB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiB0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor UA1m[-a]. 
			(...replotting...)
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PhiA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor UB0p[]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiA1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor BPhi[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor UB0p[]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor UB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor UB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor UA2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor UB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor UA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor UA0p[]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor UA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor ChiB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
			(...replotting...)
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor UA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor PhiB0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
			(...replotting...)
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor PhiA0m[]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RP0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor UA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA0p[]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor UA1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor UB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor UA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor RP1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor QD[-a, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor RP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefConstantSymbol: Defining constant symbol dummy. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor UB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UA0m[]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor DpHComp[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor UA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor S1[-a]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor S3[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67442688 bytes in RAM.

In[26]:= In[26]:=          ** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
                  
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB0p[]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67390696 bytes in RAM.

In[26]:= In[26]:=          ** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
                  
In[27]:= 
In[28]:=    Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.

In[29]:= ** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67447088 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67446808 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67408664 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67449952 bytes in RAM.

In[26]:= In[26]:=                   ** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
         
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RP0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
			(...replotting...)
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
			(...replotting...)
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
			(...replotting...)
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
			(...replotting...)
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor S2[-a]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor TPerp0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
			(...replotting...)
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
			(...replotting...)
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TPerp0p[]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
			(...replotting...)
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
			(...replotting...)
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
			(...replotting...)
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor RLambdaP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
			(...replotting...)
			(...replotting...)
			(...replotting...)
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
			(...replotting...)
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
			(...replotting...)
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
			(...replotting...)
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67390888 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
			(...replotting...)
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor ChiParaB0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor ChiParaB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67396728 bytes in RAM.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67387328 bytes in RAM.

In[26]:= 
In[26]:= In[26]:= In[26]:=                                                       
In[27]:= 
In[27]:= 
In[28]:= 
In[28]:= 
In[29]:= 
In[29]:= ** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
Launching kernels...
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
			(...replotting...)
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
 ** ToNewCanonical...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
 ** ToNewCanonical...
 ** ToNewCanonical...
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
 ** ToNewCanonical...
 ** ToNewCanonical...
 ** ToNewCanonical...
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA1m[-a]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DUB0p[-z]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
			(...replotting...)
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
 ** ToNewCanonical...
 ** ToNewCanonical...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefManifold: Defining manifold M4. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor R5[-i, -j]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor T2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
			(...replotting...)
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
			(...replotting...)
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
 ** ToNewCanonical...
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
 ** ToNewCanonical...
 ** ToNewCanonical...
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
 ** ToNewCanonical...
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor DpUB0p[-z]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor DUB0p[-z]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefManifold: Defining manifold M4. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor DRP0m[-z]. 
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefVBundle: Defining vbundle TangentM4. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefConstantSymbol: Defining constant symbol Prt. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.


General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefManifold: Defining manifold M4. 

In[24]:= ** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 

In[25]:= ** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 

In[24]:= 

In[25]:= FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 


Syntax::sntufn: Unknown unicode longname Application.
StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor W[a, b, -d, -e]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 

** DefTensor: Defining tensor TLambda[a, -d, -e]. 
StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor R5[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
   Rules {1, 2} have been declared as DownValues for Spin1.
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.

In[24]:= 
In[25]:= ** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1} have been declared as UpValues for PR2.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefManifold: Defining manifold M4. 
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefVBundle: Defining vbundle TangentM4. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PT3.
   Rules {1, 2} have been declared as DownValues for Spin1.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor Rc[a, -b]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
   Rules {1} have been declared as UpValues for PT3.
   Rules {1} have been declared as UpValues for PR5.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1} have been declared as UpValues for PT3.
   Rules {1} have been declared as UpValues for PT2.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor R6[]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor T2[-i]. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefTensor: Defining tensor T3[-i]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefTensor: Defining tensor R6[]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefTensor: Defining tensor R6[]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefTensor: Defining tensor T2[-i]. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefTensor: Defining tensor T2[-i]. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol Alp6. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefTensor: Defining tensor T3[-i]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol gBet6. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
   Rules {1, 2} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol Alp0. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol mBet1. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol gBet3. 
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefTensor: Defining tensor Lapse[]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol gBet5. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol Alp6. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol mBet5. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefTensor: Defining tensor Lapse[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor R6[]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor Lapse[]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor H[-a, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor H[-a, c]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor HComp[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor DJiDB[-c, d]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as UpValues for PR6.
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT3.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as UpValues for V.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for V.
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor X[k]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1} have been declared as UpValues for PR1.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
			(...replotting...)
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
   Rules {1} have been declared as UpValues for PT1.
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefTensor: Defining tensor X[k]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
   Rules {1} have been declared as UpValues for PT2.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
   Rules {1, 2} have been declared as UpValues for X.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
   Rules {1} have been declared as UpValues for PT3.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefTensor: Defining tensor X[k]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
   Rules {1, 2} have been declared as UpValues for X.
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefTensor: Defining tensor X[k]. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol mBet2. 
   Rules {1, 2} have been declared as UpValues for X.
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefTensor: Defining tensor J[]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cBet3. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefConstantSymbol: Defining constant symbol mBet4. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
   Rules {1} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Lapse[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for G3.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
			(...replotting...)
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor TPerp[-a, -b]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
			(...replotting...)
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor DRP0m[-z]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor HComp[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.

In[24]:=    Rules {1, 2} have been declared as DownValues for DpUA2p.

In[25]:= ** DefTensor: Defining tensor DTP0m[-z]. 
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Q[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
			(...replotting...)
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
   Rules {1} have been declared as UpValues for PR1.
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor Rs[]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DRP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0m[-z]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DRP0m[-z]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor PA0p[c, d]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefTensor: Defining tensor DUA0p[-z]. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor PA0m[d, e, f]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor ChiParaB1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor Q[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PT1.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PhiA0p[]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PhiA0m[]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor PhiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
			(...replotting...)
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor UB0p[]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor ChiA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0m[-z]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as UpValues for H.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor G3[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor ChiB0p[]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB0p[]. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor ChiA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor DV[-a, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------
   Rules {1, 2} have been declared as DownValues for DpRP2p.

In[24]:= 
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

In[25]:= The working directory is /home/wb263/HiGGS_development
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

** DefTensor: Defining tensor DpJ[-z]. 
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefManifold: Defining manifold M4. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefVBundle: Defining vbundle TangentM4. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.

In[24]:= 
In[25]:= ** DefVBundle: Defining vbundle TangentM4. 
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefManifold: Defining manifold M4. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefVBundle: Defining vbundle TangentM4. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor PBPerp[-a, d, e]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
** DefManifold: Defining manifold M4. 
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor ChiPerpA0m[]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefManifold: Defining manifold M4. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefVBundle: Defining vbundle TangentM4. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 

Syntax::sntufn: Unknown unicode longname Application.

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining weight +2 density DetG[]. Determinant.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
------------------------------------------------------------
These packages come with ABSOLUTELY NO WARRANTY; for details type\
 
>   Disclaimer[]. This is free software, and you are welcome to redistribute\
 
>   it under certain conditions. See the General Public License for details.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
Package xAct`HiGGS`  version 2.2.1, {2022, 2, 1}
CopyRight (C) 2005-2018, Will E. V. Barker, under the General Public License.
------------------------------------------------------------
This free version of HiGGS is an open source dependent of the xAct bundle,\
 
>   but NOT an official part thereof.
This free version of HiGGS incorporates Cyril Pitrou's code from the public\
 
>   repository at https://github.com/xAct-contrib/examples.
------------------------------------------------------------

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
The working directory is /home/wb263/HiGGS_development
At least one HiGGS installation directory was found at ./xAct/HiGGS.
------------------------------------------------------------
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R6[]. 

** DefTensor: Defining tensor T1[-i, -j, -k]. 
StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor R4[-i, -j]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R5[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor W[a, b, -d, -e]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.

In[24]:= 
In[25]:= ** BuildHiGGS: Defining HiGGS environment for kernel 0. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
 ** BuildHiGGS: RAM used by kernel 0 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.
 ** BuildHiGGS: Building session from ./xAct/HiGGS/HiGGS_sources.nb
 
>    with active CellTags {build}.
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor R5[-i, -j]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor R5[-i, -j]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor T2[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor TLambda3[-i]. 

FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.

General::stop: Further output of FrontEndObject::notavail
     will be suppressed during this calculation.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefManifold: Defining manifold M4. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefVBundle: Defining vbundle TangentM4. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambda2[-i]. 
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining symmetric metric tensor G[-a, -c]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining antisymmetric tensor epsilonG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG[-a, -a1, -b, -b1]. 
** DefTensor: Defining tetrametric TetraG†[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefCovD: Defining covariant derivative CD[-a]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining vanishing torsion tensor TorsionCD[a, -a1, -b]. 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining symmetric Christoffel tensor ChristoffelCD[a, -a1, -b]
 
>   . 

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining vanishing Riemann tensor RiemannCD[-a, -a1, -b, -b1]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining vanishing Ricci tensor RicciCD[-a, -a1]. 
** DefTensor: Defining vanishing Ricci scalar RicciScalarCD[]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining vanishing Einstein tensor EinsteinCD[-a, -a1]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining vanishing Weyl tensor WeylCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining vanishing TFRicci tensor TFRicciCD[-a, -a1]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining vanishing Kretschmann scalar KretschmannCD[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining vanishing symmetrized Riemann tensor 
 
>   SymRiemannCD[-a, -a1, -b, -b1]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining vanishing symmetric Schouten tensor SchoutenCD[-a, -a1]
 
>   . 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining symmetric cosmological Schouten tensor 
 
>   SchoutenCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining symmetric cosmological Einstein tensor 
 
>   EinsteinCCCD[LI[_], -a, -a1]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PR1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor R4[-i, -j]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor R5[-i, -j]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor TLambda3[-i]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor R6[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for PT3.
** DefTensor: Defining tensor T2[-i]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor T3[-i]. 
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR6.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1} have been declared as UpValues for PR3.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1} have been declared as UpValues for PT2.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
** DefTensor: Defining tensor RP1p[-a, -b]. 
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2} have been declared as DownValues for R4.
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for Spin1.
   Rules {1} have been declared as UpValues for PR5.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor PhiB0p[]. 
   Rules {1, 2} have been declared as DownValues for T1.
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PT3.
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor Spin2[-i]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor Spin3[-i]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining weight +2 density DetG[]. Determinant.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1} have been declared as UpValues for PR6.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefTensor: Defining tensor RLambda6[]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
   Rules {1} have been declared as UpValues for PR2.
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
   Rules {1} have been declared as UpValues for PR4.
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
   Rules {1} have been declared as UpValues for PR5.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1} have been declared as UpValues for PR6.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
   Rules {1} have been declared as UpValues for PT1.
   Rules {1} have been declared as UpValues for PT2.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
   Rules {1, 2} have been declared as DownValues for TLambda1.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1} have been declared as UpValues for PR2.
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
   Rules {1} have been declared as UpValues for PR4.
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
   Rules {1} have been declared as UpValues for PR5.
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
   Rules {1} have been declared as UpValues for PR6.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
   Rules {1} have been declared as UpValues for PT1.
** DefConstantSymbol: Defining constant symbol cBet6. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
   Rules {1} have been declared as UpValues for PT2.
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
   Rules {1} have been declared as UpValues for PT3.
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefTensor: Defining tensor V[-a]. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefTensor: Defining tensor H[-a, c]. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor Rc[a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefConstantSymbol: Defining constant symbol mBet4. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor Rc[a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefTensor: Defining tensor Rs[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
   Rules {1} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor PhiB0p[]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor V[-a]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
   Rules {1, 2} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefTensor: Defining tensor Lapse[]. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor Ji[]. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefTensor: Defining tensor J[]. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
   Rules {1} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 

StringJoin::string: 
   String expected at position 2 in 
    rm -rf <>FileNameJoin[{$Failed, figures/*}].
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefTensor: Defining tensor B[a, -c]. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mBet6. 
   Rules {1, 2} have been declared as UpValues for H.
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor HComp[]. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor V[-a]. 
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
** DefTensor: Defining tensor Rc[a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor H[-a, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor B[a, -c]. 
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DJDB[-c, d]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
   Rules {1} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as DownValues for DVDB.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
   Rules {1} have been declared as UpValues for J.
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
   Rules {1} have been declared as UpValues for Ji.
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol gBet3. 
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as DownValues for DJDB.
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
   Rules {1} have been declared as UpValues for G3.
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
   Rules {1} have been declared as DownValues for DVDB.
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
   Rules {1} have been declared as DownValues for DHDB.
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol mBet1. 
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
   Rules {1} have been declared as DownValues for DJDB.
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
   Rules {1} have been declared as UpValues for V.
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as UpValues for J.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor DHComp[-z]. 
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor HComp[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor BPiP[-a, -c]. 
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor A[a, c, -d]. 
   Rules {1} have been declared as DownValues for DVDB.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor G3[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor HComp[]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
   Rules {1, 2} have been declared as UpValues for X.
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1} have been declared as UpValues for Ji.
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for V.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor X[k]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1} have been declared as DownValues for DHDB.
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
   Rules {1} have been declared as DownValues for DJDB.
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1} have been declared as DownValues for DJiDB.
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1} have been declared as DownValues for DLapseDB.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for V.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
   Rules {1} have been declared as UpValues for H.
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1} have been declared as UpValues for Lapse.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor TP[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpJ[-z]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor DJ[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefConstantSymbol: Defining constant symbol Prt. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.

Syntax::sntufn: Unknown unicode longname Application.
** DefTensor: Defining tensor R[a, b, -d, -e]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor T[a, -b, -c]. 
** DefTensor: Defining tensor W[a, b, -d, -e]. 
** DefTensor: Defining tensor RLambda[a, b, -d, -e]. 
** DefTensor: Defining tensor TLambda[a, -d, -e]. 
** DefTensor: Defining tensor R1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor R2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor R3[-i, -j, -m, -n]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor R4[-i, -j]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor R5[-i, -j]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor R6[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor T1[-i, -j, -k]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor T2[-i]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor T3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R1.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   R1.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for R2.
   Rules {1, 2} have been declared as DownValues for R4.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for T1.
   Rules {1, 2} have been declared as DownValues for T1.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor RLambda1[-i, -j, -m, -n]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor RLambda2[-i, -j, -m, -n]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda3[-i, -j, -m, -n]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor RLambda4[-i, -j]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor RLambda5[-i, -j]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambda6[]. 
** DefTensor: Defining tensor TLambda1[-i, -j, -k]. 
** DefTensor: Defining tensor TLambda2[-i]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor TLambda3[-i]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda1.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor Q[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} have been declared as DownValues for 
 
>   RLambda1.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<4>>}
 
>    have been declared as DownValues for RLambda2.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambda4.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambda1.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TLambda1.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor Spin1[-i, -j, -k]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor Spin2[-i]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor Spin3[-i]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for Spin1.
   Rules {1, 2} have been declared as DownValues for Spin1.
** DefTensor: Defining tensor STensor[-i, -j, -k]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor PR1[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR2[-a, -b, -c, -d, e, f, g, h]. 
** DefTensor: Defining tensor PR3[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR4[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR5[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PR6[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as UpValues for PR1.
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for PR2.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1} have been declared as UpValues for PR3.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1} have been declared as UpValues for PR4.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1} have been declared as UpValues for PR5.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
   Rules {1} have been declared as UpValues for PR6.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor PW[-i, -k, -l, -m, a, b, c, d]. 
** DefTensor: Defining tensor PT1[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT2[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor PT3[-a, -b, -c, e, f, g]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1} have been declared as UpValues for PT1.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1} have been declared as UpValues for PT2.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1} have been declared as UpValues for PT3.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/O13ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor ChiA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
 ** BuildHiGGS: The unit test labelled CheckOrthogonalityToggle has been\
 
>   ignored.
** DefTensor: Defining tensor Rc[a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor Rs[]. 
** DefTensor: Defining tensor Tc[-a]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: The unit test labelled ShowIrrepsToggle has been ignored.
** DefConstantSymbol: Defining constant symbol cAlp1. 
** DefConstantSymbol: Defining constant symbol cAlp2. 
** DefConstantSymbol: Defining constant symbol cAlp3. 
** DefConstantSymbol: Defining constant symbol cAlp4. 
** DefConstantSymbol: Defining constant symbol cAlp5. 
** DefConstantSymbol: Defining constant symbol cAlp6. 
** DefConstantSymbol: Defining constant symbol gAlp1. 
** DefConstantSymbol: Defining constant symbol gAlp2. 
** DefConstantSymbol: Defining constant symbol gAlp3. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol gAlp4. 
** DefConstantSymbol: Defining constant symbol gAlp5. 
** DefConstantSymbol: Defining constant symbol gAlp6. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cAlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cAlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol cBet1. 
** DefConstantSymbol: Defining constant symbol cBet2. 
** DefConstantSymbol: Defining constant symbol cBet3. 
** DefConstantSymbol: Defining constant symbol cBet4. 
** DefConstantSymbol: Defining constant symbol cBet5. 
** DefConstantSymbol: Defining constant symbol cBet6. 
** DefConstantSymbol: Defining constant symbol gBet1. 
** DefConstantSymbol: Defining constant symbol gBet2. 
** DefConstantSymbol: Defining constant symbol gBet3. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefConstantSymbol: Defining constant symbol gBet4. 
** DefConstantSymbol: Defining constant symbol gBet5. 
** DefConstantSymbol: Defining constant symbol gBet6. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cBetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol cBetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol mAlp0. 
** DefConstantSymbol: Defining constant symbol mAlp1. 
** DefConstantSymbol: Defining constant symbol mAlp2. 
** DefConstantSymbol: Defining constant symbol mAlp3. 
** DefConstantSymbol: Defining constant symbol mAlp4. 
** DefConstantSymbol: Defining constant symbol mAlp5. 
** DefConstantSymbol: Defining constant symbol mAlp6. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefConstantSymbol: Defining constant symbol Alp0. 
** DefConstantSymbol: Defining constant symbol Alp1. 
** DefConstantSymbol: Defining constant symbol Alp2. 
** DefConstantSymbol: Defining constant symbol Alp3. 
** DefConstantSymbol: Defining constant symbol Alp4. 
** DefConstantSymbol: Defining constant symbol Alp5. 
** DefConstantSymbol: Defining constant symbol Alp6. 
** DefConstantSymbol: Defining constant symbol mBet1. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefConstantSymbol: Defining constant symbol mBet2. 
** DefConstantSymbol: Defining constant symbol mBet3. 
** DefConstantSymbol: Defining constant symbol mBet4. 
** DefConstantSymbol: Defining constant symbol mBet5. 
** DefConstantSymbol: Defining constant symbol mBet6. 
** DefConstantSymbol: Defining constant symbol Bet1. 
** DefConstantSymbol: Defining constant symbol Bet2. 
** DefConstantSymbol: Defining constant symbol Bet3. 
** DefConstantSymbol: Defining constant symbol Bet4. 
** DefConstantSymbol: Defining constant symbol Bet5. 
** DefConstantSymbol: Defining constant symbol Bet6. 
** DefTensor: Defining tensor V[-a]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for V.
** DefTensor: Defining tensor Lapse[]. 
** DefTensor: Defining tensor Ji[]. 
** DefTensor: Defining tensor J[]. 
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor APi[-a, -b, -c]. 
** DefTensor: Defining tensor APiP[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor BPi[-a, -c]. 
** DefTensor: Defining tensor BPiP[-a, -c]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor H[-a, c]. 
** DefTensor: Defining tensor B[a, -c]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
   Rules {1, 2} have been declared as UpValues for H.
   Rules {1, 2} have been declared as UpValues for H.
** DefTensor: Defining tensor A[a, c, -d]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor G3[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor PB0p[c, d]. 
   Rules {1, 2} have been declared as DownValues for G3.
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8} have been declared as UpValues for G3.
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1} have been declared as UpValues for G3.
** DefTensor: Defining tensor Eps[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor FoliG[-a, -b]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor HComp[]. 
** DefTensor: Defining tensor PPerp[-a, -b]. 
** DefTensor: Defining tensor PPara[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DVDB[-a, -b, c]. 
** DefTensor: Defining tensor DHDB[-a, b, -c, d]. 
** DefTensor: Defining tensor DJDB[-c, d]. 
** DefTensor: Defining tensor DJiDB[-c, d]. 
** DefTensor: Defining tensor DLapseDB[-c, d]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1} have been declared as DownValues for DVDB.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1} have been declared as DownValues for DHDB.
   Rules {1} have been declared as DownValues for DJDB.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1} have been declared as DownValues for DJiDB.
   Rules {1} have been declared as DownValues for DLapseDB.
   Rules {1} have been declared as UpValues for V.
   Rules {1} have been declared as UpValues for H.
   Rules {1} have been declared as UpValues for J.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1} have been declared as UpValues for Ji.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1} have been declared as UpValues for Lapse.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor X[k]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
   Rules {1, 2} have been declared as UpValues for X.
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor TP[-a, -b, -c]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor TLambdaP[-a, -c, -d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TPerp[-a, -b]. 
** DefTensor: Defining tensor RPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor TLambdaPerp[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB0p[]. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor DV[-a, -j]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor DJ[-a]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor PA0p[c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor DpJ[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpV[-z, -a]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefTensor: Defining tensor PA0p[c, d]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor UB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor Q[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor RP0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor RP0m[]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor RP1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DHComp[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor S3[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67381040 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor S2[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol dummy. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefConstantSymbol: Defining constant symbol dummy. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67385440 bytes in RAM.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392904 bytes in RAM.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67398288 bytes in RAM.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67395552 bytes in RAM.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67398264 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:=    Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.

In[29]:= ** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DummyGradient[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor S2[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67398176 bytes in RAM.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor CDAInert[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PThreePara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PThreePerp[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67398056 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PAPerp[-a, -b, d, e, f]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PAPara[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor PBPerp[-a, d, e]. 
** DefTensor: Defining tensor PBPara[-a, -b, d, e]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PA0p[c, d]. 
** DefTensor: Defining tensor PA1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PA2p[-a, -b, c, d]. 
** DefTensor: Defining tensor ChiB0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PA0m[d, e, f]. 
** DefTensor: Defining tensor PA1m[-a, d, e, f]. 
** DefTensor: Defining tensor PA2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor TP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor PB0p[c, d]. 
** DefTensor: Defining tensor PB1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB2p[-a, -b, c, d]. 
** DefTensor: Defining tensor PB1m[-a, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor RLambdaPerp0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
 ** ToNewCanonical...
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor PB0pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB1pT[-n, -m, a, c]. 
** DefTensor: Defining tensor PB2pT[-n, -m, a, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor PB1mT[-n, -m, a, c]. 
** DefTensor: Defining tensor PA0pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA1pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2pT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA0mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PA1mT[-n, -m, -o, a, b, c]. 
** DefTensor: Defining tensor PA2mT[-n, -m, -o, a, b, c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CompleteO3ProjectionsToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefConstantSymbol: Defining constant symbol cPerpA0p. 
** DefConstantSymbol: Defining constant symbol cPerpA0m. 
** DefConstantSymbol: Defining constant symbol cPerpA1p. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cPerpA1m. 
** DefConstantSymbol: Defining constant symbol cPerpA2p. 
** DefConstantSymbol: Defining constant symbol cPerpA2m. 
** DefConstantSymbol: Defining constant symbol cPerpB0p. 
** DefConstantSymbol: Defining constant symbol cPerpB0m. 
** DefConstantSymbol: Defining constant symbol cPerpB1p. 
** DefConstantSymbol: Defining constant symbol cPerpB1m. 
** DefConstantSymbol: Defining constant symbol cPerpB2p. 
** DefConstantSymbol: Defining constant symbol cPerpB2m. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ProjectionNormalisationsToggle.mx...
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
 ** BuildHiGGS: The unit test labelled ProjectionNormalisationsCheckToggle\
 
>   has been ignored.
** DefConstantSymbol: Defining constant symbol BetPerpPerp0p. 
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp0m. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPerp2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpPerpToggle.mx has been\
 
>   ignored.
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PT0m[d, e, f]. 
** DefTensor: Defining tensor PT1p[-a, -b, c, d]. 
** DefTensor: Defining tensor PT1m[-a, d, e, f]. 
** DefTensor: Defining tensor PT2m[-a, -b, -c, d, e, f]. 
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor PR0p[e, f, g, h]. 
** DefTensor: Defining tensor PR0m[e, f, g]. 
** DefTensor: Defining tensor PR1p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor PR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PR2p[-n, -m, e, f, g, h]. 
** DefTensor: Defining tensor PR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
** DefTensor: Defining tensor DummyGradient[-z]. 
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor ChiParaB0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor UB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor UB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiSingB0p[]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor ChiParaB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor ChiParaA0p[]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392016 bytes in RAM.

In[26]:= In[26]:=          ** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
                  
In[27]:= 
In[28]:= ** DefTensor: Defining tensor ChiSingB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.

In[29]:= ** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor ChiSingB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor ChiSingB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor S1[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor S2[-a]. 

In[26]:= 
In[26]:= In[26]:= In[26]:=                   ** DefTensor: Defining tensor DTP0m[-z]. 
                                    
In[27]:= 
In[27]:= 
In[28]:= 
In[28]:= 
In[29]:= 
In[29]:= ** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
			(...replotting...)
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= ** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 

In[29]:=    Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor UA0m[]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor UB1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefConstantSymbol: Defining constant symbol cParaA0p. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol cParaA0m. 
** DefConstantSymbol: Defining constant symbol cParaA1p. 
** DefConstantSymbol: Defining constant symbol cParaA1m. 
** DefConstantSymbol: Defining constant symbol cParaA2p. 
** DefConstantSymbol: Defining constant symbol cParaA2m. 
** DefConstantSymbol: Defining constant symbol cParaB0p. 
** DefConstantSymbol: Defining constant symbol cParaB0m. 
** DefConstantSymbol: Defining constant symbol cParaB1p. 
** DefConstantSymbol: Defining constant symbol cParaB1m. 
** DefConstantSymbol: Defining constant symbol cParaB2p. 
** DefConstantSymbol: Defining constant symbol cParaB2m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara0m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara1m. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2p. 
** DefConstantSymbol: Defining constant symbol AlpPerpPara2m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara0m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara1m. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2p. 
** DefConstantSymbol: Defining constant symbol BetPerpPara2m. 
 ** BuildHiGGS: The binary at\
 
>   ./xAct/HiGGS/bin/build/TransferCouplingsPerpParaToggle.mx has been\
 
>   ignored.
** DefConstantSymbol: Defining constant symbol AlpParaPerp0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp1m. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPerp2m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp0m. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefConstantSymbol: Defining constant symbol BetParaPerp1p. 
** DefConstantSymbol: Defining constant symbol BetParaPerp1m. 
** DefConstantSymbol: Defining constant symbol BetParaPerp2p. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefConstantSymbol: Defining constant symbol BetParaPerp2m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara0m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara1m. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2p. 
** DefConstantSymbol: Defining constant symbol AlpParaPara2m. 
** DefConstantSymbol: Defining constant symbol BetParaPara0p. 
** DefConstantSymbol: Defining constant symbol BetParaPara0m. 
** DefConstantSymbol: Defining constant symbol BetParaPara1p. 
** DefConstantSymbol: Defining constant symbol BetParaPara1m. 
** DefConstantSymbol: Defining constant symbol BetParaPara2p. 
** DefConstantSymbol: Defining constant symbol BetParaPara2m. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2} have been declared as DownValues for DpRP2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor TLambdaP0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PPerpTPerp[-e, a, b]. 
** DefTensor: Defining tensor PPerpTPara[-e, -f, a, b]. 
** DefTensor: Defining tensor PPerpRPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PPerpRPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PPerpT0p[e, f]. 
** DefTensor: Defining tensor PPerpT1p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpT1m[-a, e, f]. 
** DefTensor: Defining tensor PPerpT2p[-a, -b, e, f]. 
** DefTensor: Defining tensor PPerpR0p[e, f]. 
** DefTensor: Defining tensor PPerpR0m[e, f, g]. 
** DefTensor: Defining tensor PPerpR1p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR1m[-n, e, f, g]. 
** DefTensor: Defining tensor PPerpR2p[-n, -m, e, f]. 
** DefTensor: Defining tensor PPerpR2m[-n, -m, -o, e, f, g]. 
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiB0p[]. 
** DefTensor: Defining tensor PhiB1p[-a, -b]. 
** DefTensor: Defining tensor PhiB1m[-a]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiB2p[-a, -b]. 
** DefTensor: Defining tensor PhiA0p[]. 
** DefTensor: Defining tensor PhiA0m[]. 
** DefTensor: Defining tensor PhiA1p[-a, -b]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiA1m[-a]. 
** DefTensor: Defining tensor PhiA2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor PhiA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 16 connections.
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67395712 bytes in RAM.

In[26]:= In[26]:=             Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
                  
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...

LinkConnect::linkc: -- Message text not found -- (LinkObject[gjzhf_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[63m9n_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[i5yjq_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[bjzwa_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[u8up8_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[f6bcc_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[276dz_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[snkna_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[guidi_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[8qvck_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[287zj_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[i2j3m_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[ejmma_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[breb4_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[wsph3_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[txvss_shm, 3, 1])
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor RP0m[]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor RP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor UA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DummyGradient[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor UA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PhiA2m.
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor BPhi[-a, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor UA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PiPB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor APhi[-a, -b, -c]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CanonicalPhiToggle.mx...
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NonCanonicalPhiToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor ChiB0p[]. 
** DefTensor: Defining tensor ChiB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor ChiB1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor ChiB2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor ChiA0p[]. 
** DefTensor: Defining tensor ChiA0m[]. 
** DefTensor: Defining tensor ChiA1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiA1m[-a]. 
** DefTensor: Defining tensor ChiA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor ChiA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PiPA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2} have been declared as DownValues for UB2p.
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor PiPA0m[]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiA2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpB0p[]. 
** DefTensor: Defining tensor ChiPerpB1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor ChiPerpB1m[-a]. 
** DefTensor: Defining tensor ChiPerpB2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiPerpA0p[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor ChiPerpA0m[]. 
** DefTensor: Defining tensor ChiPerpA1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiPerpA1m[-a]. 
** DefTensor: Defining tensor ChiPerpA2p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor ChiPerpA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiPerpA2m.
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor ChiParaB0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DummyGradient[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for PiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TP0m[]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor RPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP1m[-a]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiPerpA2m.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor BChiPerp[-a, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor AChiPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiPerpToggle.mx...
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor S1[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S2[-a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392368 bytes in RAM.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor ChiSingB0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor DHComp[-z]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor ChiSingB1p[-a, -b]. 
** DefTensor: Defining tensor ChiSingB1m[-a]. 
** DefTensor: Defining tensor ChiSingB2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA0p[]. 
** DefTensor: Defining tensor ChiSingA0m[]. 
** DefTensor: Defining tensor ChiSingA1p[-a, -b]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor ChiSingA1m[-a]. 
** DefTensor: Defining tensor ChiSingA2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor ChiSingA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiSingA2m.
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67396648 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67395072 bytes in RAM.

In[26]:= In[26]:=          ** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
                  
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67389352 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=  ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
Launching kernels...
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP1m[-a]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
Launching kernels...
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiSingA2m.
** DefTensor: Defining tensor BChiSingExtra[-a, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor AChiSingExtra[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/ChiSingToggle.mx...
** DefTensor: Defining tensor TLambdaP1m[-a]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
** DefTensor: Defining tensor RLambdaP0m[]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor UB0p[]. 
** DefTensor: Defining tensor UB1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
** DefTensor: Defining tensor UB1m[-a]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor UB2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor UA0p[]. 
** DefTensor: Defining tensor UA0m[]. 
** DefTensor: Defining tensor UA1p[-a, -b]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor UA1m[-a]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor UA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor UA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for UA2m.
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
 ** ToNewCanonical...
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67394792 bytes in RAM.
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 

In[26]:=    Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
In[26]:=          ** DefTensor: Defining tensor S1[-a]. 
                  
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor S3[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor RPerp1m[-a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RPerp0p[]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for UA2m.
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for UB2p.
   Rules {1, 2} have been declared as DownValues for UA2p.
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor PiPB0p[]. 
** DefTensor: Defining tensor PiPB1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPB1m[-a]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor PiPB2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor PiPA0p[]. 
** DefTensor: Defining tensor PiPA0m[]. 
** DefTensor: Defining tensor PiPA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor PiPA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor PiPA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PiPA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PiPA2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor TPerp0p[]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for PiPA2m.
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2} have been declared as DownValues for PiPB2p.
   Rules {1, 2} have been declared as DownValues for PiPA2p.
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor TP0m[]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor TP1p[-a, -b]. 
** DefTensor: Defining tensor RPerp0m[]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TP1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor TP2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor RP0p[]. 
** DefTensor: Defining tensor RP0m[]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RP1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor RP1m[-a]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RP2p[-a, -b]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392816 bytes in RAM.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for TP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
 ** ToNewCanonical...
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TP2m.
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor ChiParaB0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
			(...replotting...)
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<86>>}
 
>    have been declared as UpValues for TP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for RP2m.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
 ** ToNewCanonical...
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RP2m.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for RP2p.
** DefTensor: Defining tensor PTPerp[-e, -f, a, b, c]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PTPara[-e, -f, -g, a, b, c]. 
** DefTensor: Defining tensor PRPerp[-e, -f, -g, a, b, c, d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor PRPara[-e, -f, -g, -h, a, b, c, d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor TLambdaP0m[]. 
** DefTensor: Defining tensor TLambdaP1p[-a, -b]. 
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor TLambdaP1m[-a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor TLambdaP2m[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor RLambdaP0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RLambdaP0m[]. 
** DefTensor: Defining tensor RLambdaP1p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP1m[-a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor RLambdaP2p[-a, -b]. 
** DefTensor: Defining tensor RLambdaP2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 

In[26]:= In[26]:=             Rules {1, 2} have been declared as DownValues for DpPiPA2p.
                  
In[27]:= 
In[28]:=    Rules {1, 2} have been declared as DownValues for DPiPB2p.

In[29]:= ** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor ChiParaA0p[]. 
 ** ToNewCanonical...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for RLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for TLambdaP2m.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67396984 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= ** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 

In[29]:= ** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67395784 bytes in RAM.
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor S2[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for TLambdaP2m.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TPerp0p[]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor S3[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor S2[-a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor TPerp1p[-a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor TPerp1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor TPerp2p[-a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor RPerp0p[]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor RPerp0m[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor RPerp1p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp1m[-a]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor RPerp2p[-a, -b]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPerp2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for TPerp2p.
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RPerp2m.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA0p[]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DHComp[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpTP0m[-z]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67391648 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RPerp2m.
   Rules {1, 2} have been declared as DownValues for RPerp2p.
** DefTensor: Defining tensor TLambdaPerp0p[]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor TLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor TLambdaPerp1m[-a]. 
** DefTensor: Defining tensor TLambdaPerp2p[-a, -b]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor RLambdaPerp0p[]. 
** DefTensor: Defining tensor RLambdaPerp0m[]. 
** DefTensor: Defining tensor RLambdaPerp1p[-a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor RLambdaPerp1m[-a]. 
** DefTensor: Defining tensor RLambdaPerp2p[-a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor DpPiPA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor RLambdaPerp2m[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for RLambdaPerp2m.
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67396080 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= ** DefTensor: Defining tensor DTP1m[-z, -a]. 

In[28]:= 
In[29]:= ** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67396520 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= ** DefTensor: Defining tensor DTP1m[-z, -a]. 

In[29]:= ** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392648 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67394752 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=  ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for RLambdaPerp2m.
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for RLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for TLambdaPerp2p.
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
   Rules {1, 2} have been declared as DownValues for DUB2p.
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
** DefTensor: Defining tensor DUA0p[-z]. 
Launching kernels...
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
Launching kernels...
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor RPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DRP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor RLambdaPPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= {{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}

In[29]:= {{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RLambdaPPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor DpPiPA0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor RPerpPara[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor RLambdaPerpPerp[-a, -b]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor RLambdaPerpPara[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
 ** ToNewCanonical...
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaB0m[]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor ChiParaB1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor ChiParaB1m[-a]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor ChiParaB2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor ChiParaA0p[]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor ChiParaA0m[]. 
** DefTensor: Defining tensor ChiParaA1p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor ChiParaA1m[-a]. 
** DefTensor: Defining tensor ChiParaA2p[-a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor ChiParaA2m[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaB2m.
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DUA0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaB2m.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for ChiParaA2m.
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor DRP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for ChiParaA2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DPiPB0p[-z]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DPiPB1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DPiPB2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DPiPA0p[-z]. 
** DefTensor: Defining tensor DPiPA0m[-z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DPiPA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA1m[-z, -a]. 
** DefTensor: Defining tensor DPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DPiPA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67442608 bytes in RAM.
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67396344 bytes in RAM.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DPiPA2m.
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DPiPA2p.
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
** DefTensor: Defining tensor S1[-a]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DRP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpPiPB0p[-z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpPiPB1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpPiPB1m[-z, -a]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpPiPB2p.
** DefTensor: Defining tensor DpPiPA0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpPiPA0m[-z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpPiPA1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DpPiPA2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpPiPA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpPiPA2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: Resource temporarily unavailable
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   3 of 16 kernels failed to launch.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor S2[-a]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
sh: fork: retry: Resource temporarily unavailable
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
sh: fork: retry: No child processes
terminate called after throwing an instance of 'MathLink::MLException'
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor S1[-a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
sh: fork: retry: Resource temporarily unavailable
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
sh: fork: retry: No child processes
** DefTensor: Defining tensor S3[-a]. 
sh: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpPiPA2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpPiPA2p.
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
** DefTensor: Defining tensor JD[-a, -y, -z]. 
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
sh: fork: retry: No child processes
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 

In[26]:= In[26]:=          ** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
                  
In[27]:= 
In[28]:=  ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...

In[29]:= ** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
sh: fork: retry: No child processes
sh: fork: retry: Resource temporarily unavailable
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor DummyGradient[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
sh: fork: retry: No child processes
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor S1[-a]. 
sh: fork: retry: No child processes
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
sh: fork: retry: No child processes
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DpHComp[-z]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
sh: fork: retry: No child processes
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
terminate called after throwing an instance of 'MathLink::MLException'
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
terminate called after throwing an instance of 'MathLink::MLException'
sh: fork: retry: No child processes
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
terminate called after throwing an instance of 'MathLink::MLException'
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
sh: fork: retry: Resource temporarily unavailable
sh: fork: retry: No child processes
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DRP0p[-z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DUB0p[-z]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DUB1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DUB1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor DUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DUB2p.
** DefTensor: Defining tensor DUA0p[-z]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DUA0m[-z]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DUA1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DUA1m[-z, -a]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DUA2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392896 bytes in RAM.

In[26]:= In[26]:=          ** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
                  ** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 

In[27]:= 
In[28]:=    Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.

In[29]:= ** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   6 of 16 kernels failed to launch.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67393560 bytes in RAM.

In[26]:= In[26]:=          ** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
                  
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67395488 bytes in RAM.

In[26]:= In[26]:=          ** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
                  
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor S2[-a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor S3[-a]. 
** DefConstantSymbol: Defining constant symbol dummy. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
sh: fork: retry: No child processes

LinkOpen::linke: No MathLink problem encountered..
sh: fork: retry: No child processes
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefConstantSymbol: Defining constant symbol dummy. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
   Rules {1, 2} have been declared as DownValues for DRP2p.
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   15 of 16 kernels failed to launch.
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DUA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DUA2p.
** DefTensor: Defining tensor DpUB0p[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUB1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67396688 bytes in RAM.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor JD[-a, -y, -z]. 
sh: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
sh: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor S3[-a]. 

LinkOpen::linke: No MathLink problem encountered..
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor KX[-a, -b, -c]. 
sh: fork: retry: No child processes

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   7 of 16 kernels failed to launch.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
sh: fork: retry: Resource temporarily unavailable
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
sh: fork: retry: No child processes
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
sh: fork: retry: No child processes
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 16 connections.
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392208 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpUB1m[-z, -a]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor DpRP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
** DefTensor: Defining tensor DpUB2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpUB2p.
** DefTensor: Defining tensor DpUA0p[-z]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpUA0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
** DefTensor: Defining tensor DpUA1p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpUA1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpUA2p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpUA2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpUA2m.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
sh: fork: retry: No child processes
** DefConstantSymbol: Defining constant symbol dummy. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67397616 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= /usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67395152 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67396712 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=  ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67389656 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 

In[26]:= In[26]:=          {{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
                  
In[27]:= 
In[28]:= {{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...

In[29]:= ** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
Launching kernels...
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
sh: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
Launching kernels...
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 

LinkOpen::linke: No MathLink problem encountered..
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

LinkOpen::linke: No MathLink problem encountered..
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.

LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

LinkOpen::linke: No MathLink problem encountered..
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.

LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67395024 bytes in RAM.

In[26]:= In[26]:=                      Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
         
In[27]:= 
In[28]:= /usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

In[29]:= 
LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..

SubKernels`LocalKernels`LaunchLocal::somefail: 
   12 of 16 kernels failed to launch.

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpUA2m.
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpUA2p.
** DefTensor: Defining tensor DTP0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DTP2m.
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
sh: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67394864 bytes in RAM.

In[26]:= In[26]:=          sh: fork: retry: No child processes
                  
In[27]:= 
In[28]:= sh: fork: retry: No child processes

In[29]:= sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DHComp[-z]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
sh: fork: retry: No child processes
sh: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes

LinkOpen::linke: No MathLink problem encountered..
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTP2m.
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor DRP0p[-z]. 

LinkOpen::linke: No MathLink problem encountered..
sh: fork: retry: No child processes
** DefTensor: Defining tensor DRP0m[-z]. 
** DefTensor: Defining tensor DRP1p[-z, -a, -b]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor DRP1m[-z, -a]. 
** DefTensor: Defining tensor DRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRP2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
sh: fork: retry: No child processes
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
sh: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
sh: fork: retry: No child processes
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
sh: fork: retry: No child processes
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
sh: fork: retry: No child processes
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRP2m.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
   Rules {1, 2} have been declared as DownValues for DRP2p.
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaP0m[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DTLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DTLambdaP2m[-z, -a, -b, -c]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for DTLambdaP2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
			(...replotting...)
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor DpRP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 13 connections.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DpHComp[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 1 of 16 connections.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DTLambdaP2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor DRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DRLambdaP0m[-z]. 
** DefTensor: Defining tensor DRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor DpHComp[-z]. 

** DefTensor: Defining tensor SuperHamiltonian0p[]. 
SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 2 of 16 connections.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
sh: fork: retry: No child processes
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DRLambdaP2p.
sh: fork: retry: No child processes
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DTLambdaPerp2p.
** DefTensor: Defining tensor DRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DRLambdaPerp2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 1 of 16 connections.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 10 connections.
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DRLambdaPerp2m.
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
   Rules {1, 2} have been declared as DownValues for DRLambdaPerp2p.
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor DHComp[-z]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpTP0m[-z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpTP1p[-z, -a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpTP1m[-z, -a]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTP2m.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor S1[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefConstantSymbol: Defining constant symbol dummy. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 1 connections.
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTP2m.
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 9 connections.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpRP0p[-z]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRP0m[-z]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpRP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpRP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRP2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
sh: fork: Resource temporarily unavailable
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
sh: fork: Resource temporarily unavailable
sh: fork: Resource temporarily unavailable
sh: fork: Resource temporarily unavailable
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
sh: fork: Resource temporarily unavailable
sh: fork: Resource temporarily unavailable
sh: fork: Resource temporarily unavailable
sh: fork: Resource temporarily unavailable
sh: fork: Resource temporarily unavailable
sh: fork: Resource temporarily unavailable
sh: fork: Resource temporarily unavailable
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
sh: fork: Resource temporarily unavailable
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor S3[-a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
sh: fork: retry: No child processes
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
sh: fork: retry: No child processes
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor S2[-a]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor JD[-a, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
terminate called after throwing an instance of 'MathLink::MLException'
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67391176 bytes in RAM.

In[26]:= In[26]:=          ** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
                  
In[27]:= 
In[28]:= ** DefConstantSymbol: Defining constant symbol dummy. 

In[29]:= ** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor S1[-a]. 
** DefConstantSymbol: Defining constant symbol dummy. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[5mz2e_shm, 3, 1])
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor S3[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[sdnyw_shm, 3, 1])
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
sh: fork: retry: Resource temporarily unavailable
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[a8adk_shm, 3, 1])
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[4p4nm_shm, 3, 1])
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[aseb3_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[rrgnx_shm, 3, 1])
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[69tf7_shm, 3, 1])
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.

LinkConnect::linkc: -- Message text not found -- (LinkObject[mer9y_shm, 3, 1])
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRP2m.
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 

LinkOpen::linke: No MathLink problem encountered..
   Rules {1, 2} have been declared as DownValues for DpRP2p.
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 4 connections.

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[jwy5z_shm, 3, 1])
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.

LinkConnect::linkc: -- Message text not found -- (LinkObject[9uixk_shm, 3, 1])
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.

LinkConnect::linkc: -- Message text not found -- (LinkObject[vfbqh_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[y4a2u_shm, 3, 1])
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.

LinkConnect::linkc: -- Message text not found -- (LinkObject[g7bez_shm, 3, 1])
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[z2su2_shm, 3, 1])
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[9fi64_shm, 3, 1])
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[qbbc8_shm, 3, 1])
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor S3[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[vy324_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[i6m3x_shm, 3, 1])
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67393632 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67393736 bytes in RAM.

In[26]:= In[26]:=             Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
                  
In[27]:= 
In[28]:= 
In[29]:=    Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392128 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=  ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67391504 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=  ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx

LinkOpen::linke: No MathLink problem encountered..
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...

LinkOpen::linke: No MathLink problem encountered..
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor DpTLambdaP0m[-z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67449768 bytes in RAM.

In[26]:= In[26]:=          
LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
                  
In[27]:= 
In[28]:= 
In[29]:= 
LinkOpen::linke: No MathLink problem encountered..


LinkOpen::linke: No MathLink problem encountered..
LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor DpTLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 
** DefTensor: Defining tensor DpTLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaP2m[-z, -a, -b, -c]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 

LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpTLambdaP2m.
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor DpHComp[-z]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[uayda_shm, 3, 1])

LinkConnect::linkc: -- Message text not found -- (LinkObject[s972w_shm, 3, 1])
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: Resource temporarily unavailable
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: Resource temporarily unavailable
Mathematica kernel executable
/SystemFiles/Kernel/Binaries/Linux-x86-64/WolframKernel
not found.  Your Mathematica installation may be incomplete
or corrupted.
Mathematica kernel executable
/SystemFiles/Kernel/Binaries/Linux/WolframKernel
not found.  Your Mathematica installation may be incomplete
or corrupted.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: Resource temporarily unavailable
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[czx5t_shm, 3, 1])
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: Resource temporarily unavailable
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[ts23v_shm, 3, 1])
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67449160 bytes in RAM.
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[x4z23_shm, 3, 1])
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[dzwe7_shm, 3, 1])
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[2hqan_shm, 3, 1])
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: Resource temporarily unavailable
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[xqqc5_shm, 3, 1])
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

LinkConnect::linkc: -- Message text not found -- (LinkObject[tagcx_shm, 3, 1])
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 


SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
SubKernels`LocalKernels`LaunchLocal::somefail: 
   15 of 16 kernels failed to launch.

SubKernels`LocalKernels`LaunchLocal::somefail: 
   15 of 16 kernels failed to launch.
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   15 of 16 kernels failed to launch.
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpTLambdaP2m.
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0p[-z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
sh: fork: Resource temporarily unavailable
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP0m[-z]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaP1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP2p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaP2m[-z, -a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaP2m.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
sh: fork: Resource temporarily unavailable
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
terminate called after throwing an instance of 'MathLink::MLException'
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   13 of 16 kernels failed to launch.
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: Resource temporarily unavailable
Mathematica kernel executable
/SystemFiles/Kernel/Binaries/Linux-x86-64/WolframKernel
not found.  Your Mathematica installation may be incomplete
or corrupted.
Mathematica kernel executable
/SystemFiles/Kernel/Binaries/Linux/WolframKernel
not found.  Your Mathematica installation may be incomplete
or corrupted.
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: Resource temporarily unavailable
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: Resource temporarily unavailable
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor S2[-a]. 
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor S3[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefConstantSymbol: Defining constant symbol dummy. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor S2[-a]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor S3[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor S3[-a]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor S2[-a]. 
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor S3[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: Resource temporarily unavailable
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaP2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaP2p.
** DefConstantSymbol: Defining constant symbol dummy. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: Resource temporarily unavailable
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: Resource temporarily unavailable
Mathematica kernel executable
/SystemFiles/Kernel/Binaries/Linux-x86-64/WolframKernel
not found.  Your Mathematica installation may be incomplete
or corrupted.
Mathematica kernel executable
/SystemFiles/Kernel/Binaries/Linux/WolframKernel
not found.  Your Mathematica installation may be incomplete
or corrupted.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: Resource temporarily unavailable
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

LinkConnect::linkc: -- Message text not found -- (LinkObject[4k4ez_shm, 3, 1])
** DefTensor: Defining tensor DpTLambdaPerp0p[-z]. 
** DefTensor: Defining tensor DpTLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpTLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpTLambdaPerp2p[-z, -a, -b]. 

LinkConnect::linkc: -- Message text not found -- (LinkObject[pn7zg_shm, 3, 1])
   Rules {1, 2} have been declared as DownValues for DpTLambdaPerp2p.
** DefTensor: Defining tensor DpRLambdaPerp0p[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: Resource temporarily unavailable
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: Resource temporarily unavailable
** DefTensor: Defining tensor DpRLambdaPerp0m[-z]. 
** DefTensor: Defining tensor DpRLambdaPerp1p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp1m[-z, -a]. 
** DefTensor: Defining tensor DpRLambdaPerp2p[-z, -a, -b]. 
** DefTensor: Defining tensor DpRLambdaPerp2m[-z, -a, -b, -c]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
terminate called after throwing an instance of 'MathLink::MLException'
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67395256 bytes in RAM.
   Rules {1, 2, 3, 4} have been declared as DownValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67446704 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=  ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67393368 bytes in RAM.
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= ** DefTensor: Defining tensor OrigBComplement[-i, -k]. 

LinkOpen::linke: No MathLink problem encountered..
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67395184 bytes in RAM.

In[26]:= In[26]:=          ** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 

LinkOpen::linke: No MathLink problem encountered..
                  
In[27]:= 
In[28]:= 
In[29]:=  ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=  ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392800 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= {{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

LinkOpen::linke: No MathLink problem encountered..
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67390000 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= 
LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor KX[-a, -b, -c]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   10 of 16 kernels failed to launch.
** DefTensor: Defining tensor DummyGradient[-z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
   Rules {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, <<374>>}
 
>    have been declared as UpValues for DpRLambdaPerp2m.
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
   Rules {1, 2} have been declared as DownValues for DpRLambdaPerp2p.

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor DpHComp[-z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor SuperHamiltonian0p[]. 
** DefTensor: Defining tensor LinearSuperMomentum1m[-a]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1m[-a]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor RotationalSuperMomentum1p[-a, -b]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor RPShellPara[-a, -b, -c, -d]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor RPShellPerp[-a, -b, -c]. 
** DefTensor: Defining tensor S3[-a]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefTensor: Defining tensor PerpBComplement[-i, -k]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor OrigBComplement[-i, -k]. 
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefConstantSymbol: Defining constant symbol dummy. 
** DefTensor: Defining tensor SingBComplement[-i, -k]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
** DefTensor: Defining tensor PerpAComplement[-i, -j, -k]. 
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
** DefTensor: Defining tensor OrigAComplement[-i, -j, -k]. 
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...
** DefTensor: Defining tensor SingAComplement[-i, -j, -k]. 

LinkOpen::linke: No MathLink problem encountered..
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/GeneralComplementsToggle.mx...

LinkOpen::linke: No MathLink problem encountered..
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...

LinkOpen::linke: No MathLink problem encountered..
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/CDPiPToCDPiPO3.mx...

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.

LinkOpen::linke: No MathLink problem encountered..
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/NesterFormIfConstraints.mx...

LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor KX[-a, -b, -c]. 
** DefTensor: Defining tensor KKX[-a, -b, -c, -d]. 
** DefTensor: Defining tensor KXP[-a, -b, -c]. 

LinkOpen::linke: No MathLink problem encountered..
** DefTensor: Defining tensor KKXP[-a, -b, -c, -d]. 

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
** DefTensor: Defining tensor DummyGradient[-z]. 
** DefTensor: Defining tensor DummyHessian[-z, -w]. 
** DefTensor: Defining tensor DummyGradientGreek[-z]. 
** DefTensor: Defining tensor DummyHessianGreek[-z, -w]. 
** DefTensor: Defining tensor RD[a, b, -d, -e, -x, -y, -z]. 
** DefTensor: Defining tensor RDS1[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS2[a, b, -d, -e, -x, -y, -z, v]. 
** DefTensor: Defining tensor RDS3[a, b, -d, -e, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor TD[a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor TDS1[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS2[a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor TDS3[a, -b, -c, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1p[-a, -b, -x, -y, -z]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS1B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDB2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2B2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3B2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0p[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0p[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0p[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA0m[-x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A0m[-x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A0m[-x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A1p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA1m[-a, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A1m[-a, -x, -y, -z, v]. 
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** DefTensor: Defining tensor PhiDS2A1m[-a, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A1m[-a, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2p[-a, -b, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2p[-a, -b, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2p[-a, -b, -x, -y, -z, v, w]. 
** DefTensor: Defining tensor PhiDA2m[-a, -b, -c, -x, -y, -z]. 
** DefTensor: Defining tensor PhiDS1A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS2A2m[-a, -b, -c, -x, -y, -z, v]. 
** DefTensor: Defining tensor PhiDS3A2m[-a, -b, -c, -x, -y, -z, v, w]. 
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDA2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS1A2m.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS2A2m.

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
   Rules {1, 2, 3, 4} have been declared as DownValues for PhiDS3A2m.
** DefTensor: Defining tensor QD[-a, -y, -z]. 
** DefTensor: Defining tensor QDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor QDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor JD[-a, -y, -z]. 
** DefTensor: Defining tensor JDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor JDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor LapseD[-a, -y, -z]. 
** DefTensor: Defining tensor LapseDS1[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS2[-a, -y, -z, v]. 
** DefTensor: Defining tensor LapseDS3[-a, -y, -z, v, w]. 
** DefTensor: Defining tensor S1[-a]. 
** DefTensor: Defining tensor S2[-a]. 
** DefTensor: Defining tensor S3[-a]. 
 ** BuildHiGGS: Incorporating the binary at\
 
>   ./xAct/HiGGS/bin/build/VelocityToggle.mx...
** DefConstantSymbol: Defining constant symbol dummy. 

Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null.  (line 5319 of
     "./xAct/HiGGS/HiGGS_sources.m").
 ** BuildHiGGS: The unit test labelled documentation has been ignored.
 ** BuildHiGGS: The context on quitting HiGGS.m is Global`.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67392208 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=  ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...

LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
 ** BuildHiGGS: The HiGGS environment is now ready to use and is occupying 
 
>   67393376 bytes in RAM.

In[26]:= In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:=  ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
{{{{spin_0p, PhiB1p[-i, -j], PhiB1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiB1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA0m[]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiB1m[-i], PhiB1m[-l]}, {spin_0p, PhiB1m[-i], PhiA0m[]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiB1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA0m[], PhiA0m[]}, {spin_0p, PhiA0m[], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA1m[-l]}, {spin_0p, PhiA0m[], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA0m[], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1p[-i, -j], PhiA1p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA1m[-i], PhiA1m[-l]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA1m[-i], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2p[-i, -j], PhiA2p[-l, -m]}, 
 
>     {spin_0p, PhiA2p[-i, -j], PhiA2m[-l, -m, -n]}}, 
 
>    {{spin_0p, PhiA2m[-i, -j, -k], PhiA2m[-l, -m, -n]}}}}
{{{EvaluationObject[1, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[2, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[3, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[4, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[5, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[6, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[7, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[8, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[9, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[10, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[11, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[12, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[13, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[14, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[15, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[16, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[17, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[18, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[19, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[20, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[21, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[22, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[23, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[24, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[25, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[26, PoissonBracketParallel[<<4>>], <>], 
 
>     EvaluationObject[27, PoissonBracketParallel[<<4>>], <>]}, 
 
>    {EvaluationObject[28, PoissonBracketParallel[<<4>>], <>]}}}
Launching kernels...

LinkOpen::linke: No MathLink problem encountered..
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes

LinkOpen::linke: No MathLink problem encountered..

LinkOpen::linke: No MathLink problem encountered..

General::stop: Further output of LinkOpen::linke
     will be suppressed during this calculation.

SubKernels`LocalKernels`LaunchLocal::somefail: 
   16 of 16 kernels failed to launch.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes


SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 1 connections.
SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 1 connections.

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 1 connections.

SubKernels`SubKernels::timekernels: 
   Timeout for subkernels. Received only 0 of 3 connections.
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
/usr/local/software/mathematica/12.1/Executables/wolfram: fork: retry: No child processes
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

BuildHiGGS::built: The HiGGS environment has already been built.
** BuildHiGGS: Defining HiGGS environment for kernel 0. 

BuildHiGGS::built: The HiGGS environment has already been built.
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
 ** DefTheory: Incorporating the binary at\
 
>   /home/wb263/HiGGS_development/bin/spin_0pDefTheory.mx
 ** PoissonBracket {PhiB1p[-i, -j], PhiB1p[-l, -m]} with options 
 
>   {ToShell -> True, Hard -> False, Surficial -> False, Order -> Infinity, 
 
>    GToFoliG -> True, PreTruncate -> False, NesterForm -> True, 
 
>    PrintAnswer -> True, Parallel -> False}...
 ** ToBasicForm...
 ** PoissonBracket {PhiB1p[-i, -j], PhiB1p[-l, -m]} with options 
 
>   {ToShell -> True, Hard -> False, Surficial -> False, Order -> Infinity, 
 
>    GToFoliG -> True, PreTruncate -> False, NesterForm -> True, 
 
>    PrintAnswer -> True, Parallel -> False}...
 ** ToBasicForm...
 ** ToOrderCanonical: order Infinity...
 ** ToNewCanonical...
 ** ToOrderCanonical: order Infinity...
 ** ToNewCanonical...
From KernelObject[16, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 16. 

From KernelObject[16, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 16. 

From KernelObject[16, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 16. 

From KernelObject[16, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 16. 

From KernelObject[15, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 15. 

From KernelObject[15, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 15. 

From KernelObject[16, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 16. 

From KernelObject[15, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 15. 

From KernelObject[15, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 15. 

From KernelObject[14, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 14. 

From KernelObject[14, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 14. 

From KernelObject[15, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 15. 

From KernelObject[14, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 14. 

From KernelObject[14, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 14. 

From KernelObject[13, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 13. 

From KernelObject[13, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 13. 

From KernelObject[14, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 14. 

From KernelObject[13, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 13. 

From KernelObject[13, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 13. 

From KernelObject[12, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 12. 

From KernelObject[12, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 12. 

From KernelObject[13, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 13. 

From KernelObject[12, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 12. 

From KernelObject[12, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 12. 

From KernelObject[11, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 11. 

From KernelObject[11, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 11. 

From KernelObject[12, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 12. 

From KernelObject[11, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 11. 

From KernelObject[11, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 11. 

From KernelObject[10, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 10. 

From KernelObject[10, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 10. 

From KernelObject[11, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 11. 

From KernelObject[10, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 10. 

From KernelObject[9, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 9. 

From KernelObject[9, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 9. 

From KernelObject[10, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 10. 

From KernelObject[10, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 10. 

From KernelObject[9, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 9. 

From KernelObject[8, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 8. 

From KernelObject[9, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 9. 

From KernelObject[8, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 8. 

From KernelObject[9, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 9. 

From KernelObject[8, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 8. 

From KernelObject[7, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 7. 

From KernelObject[7, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 7. 

From KernelObject[8, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 8. 

From KernelObject[8, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 8. 

From KernelObject[7, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 7. 

From KernelObject[6, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 6. 

From KernelObject[7, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 7. 

From KernelObject[6, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 6. 

From KernelObject[7, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 7. 

From KernelObject[6, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 6. 

From KernelObject[5, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 5. 

From KernelObject[5, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 5. 

From KernelObject[6, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 6. 

From KernelObject[5, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 5. 

From KernelObject[4, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 4. 

From KernelObject[4, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 4. 

From KernelObject[5, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 5. 

From KernelObject[6, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 6. 

From KernelObject[4, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 4. 

From KernelObject[3, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 3. 

From KernelObject[3, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 3. 

From KernelObject[5, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 5. 

From KernelObject[4, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 4. 

From KernelObject[2, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 2. 

From KernelObject[2, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 2. 

From KernelObject[4, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 4. 

From KernelObject[3, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 3. 

From KernelObject[3, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 3. 

From KernelObject[1, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 1. 

From KernelObject[1, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 1. 

From KernelObject[3, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 3. 

From KernelObject[2, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 2. 

From KernelObject[2, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 2. 

From KernelObject[1, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 1. 

From KernelObject[1, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 1. 

From KernelObject[2, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 2. 

From KernelObject[1, local]:
** BuildHiGGS: Defining HiGGS environment for kernel 1. 

From KernelObject[16, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[15, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[16, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[14, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[15, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[13, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[14, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[12, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[13, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[16, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[11, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[16, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[12, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[10, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[15, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[15, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[11, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[9, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[14, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[14, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[10, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[8, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[13, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[13, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[9, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[7, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[12, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[12, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[8, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[6, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[16, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[11, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[11, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[7, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[5, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[15, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[10, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[10, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[4, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[6, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[14, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[9, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[9, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[3, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[5, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[13, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[8, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[8, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[4, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[2, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[12, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[7, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[7, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[1, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[3, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[11, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[6, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[6, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[2, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[10, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[5, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[5, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[1, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[9, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[4, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[4, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[8, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[3, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[3, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[7, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[2, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[2, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[6, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[1, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[1, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[5, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[4, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[3, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[2, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[1, local]:
FrontEndObject::notavail: 
   A front end is not available; certain operations require a front end.
From KernelObject[16, local]:
 ** BuildHiGGS: RAM used by kernel 16 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[16, local]:
 ** BuildHiGGS: RAM used by kernel 16 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[15, local]:
 ** BuildHiGGS: RAM used by kernel 15 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[15, local]:
 ** BuildHiGGS: RAM used by kernel 15 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[14, local]:
 ** BuildHiGGS: RAM used by kernel 14 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[14, local]:
 ** BuildHiGGS: RAM used by kernel 14 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[13, local]:
 ** BuildHiGGS: RAM used by kernel 13 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[13, local]:
 ** BuildHiGGS: RAM used by kernel 13 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[12, local]:
 ** BuildHiGGS: RAM used by kernel 12 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[12, local]:
 ** BuildHiGGS: RAM used by kernel 12 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[11, local]:
 ** BuildHiGGS: RAM used by kernel 11 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[16, local]:
 ** BuildHiGGS: RAM used by kernel 16 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[11, local]:
 ** BuildHiGGS: RAM used by kernel 11 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[10, local]:
 ** BuildHiGGS: RAM used by kernel 10 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[10, local]:
 ** BuildHiGGS: RAM used by kernel 10 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[15, local]:
 ** BuildHiGGS: RAM used by kernel 15 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[9, local]:
 ** BuildHiGGS: RAM used by kernel 9 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[9, local]:
 ** BuildHiGGS: RAM used by kernel 9 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[16, local]:
 ** BuildHiGGS: RAM used by kernel 16 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[14, local]:
 ** BuildHiGGS: RAM used by kernel 14 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[8, local]:
 ** BuildHiGGS: RAM used by kernel 8 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[8, local]:
 ** BuildHiGGS: RAM used by kernel 8 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[13, local]:
 ** BuildHiGGS: RAM used by kernel 13 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[15, local]:
 ** BuildHiGGS: RAM used by kernel 15 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[7, local]:
 ** BuildHiGGS: RAM used by kernel 7 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[12, local]:
 ** BuildHiGGS: RAM used by kernel 12 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[7, local]:
 ** BuildHiGGS: RAM used by kernel 7 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[14, local]:
 ** BuildHiGGS: RAM used by kernel 14 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[6, local]:
 ** BuildHiGGS: RAM used by kernel 6 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[11, local]:
 ** BuildHiGGS: RAM used by kernel 11 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[6, local]:
 ** BuildHiGGS: RAM used by kernel 6 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[13, local]:
 ** BuildHiGGS: RAM used by kernel 13 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[5, local]:
 ** BuildHiGGS: RAM used by kernel 5 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[10, local]:
 ** BuildHiGGS: RAM used by kernel 10 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[12, local]:
 ** BuildHiGGS: RAM used by kernel 12 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[5, local]:
 ** BuildHiGGS: RAM used by kernel 5 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[4, local]:
 ** BuildHiGGS: RAM used by kernel 4 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[9, local]:
 ** BuildHiGGS: RAM used by kernel 9 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[4, local]:
 ** BuildHiGGS: RAM used by kernel 4 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[11, local]:
 ** BuildHiGGS: RAM used by kernel 11 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[3, local]:
 ** BuildHiGGS: RAM used by kernel 3 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[16, local]:
 ** BuildHiGGS: RAM used by kernel 16 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[8, local]:
 ** BuildHiGGS: RAM used by kernel 8 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[3, local]:
From KernelObject[10, local]:
 ** BuildHiGGS: RAM used by kernel 10 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

 ** BuildHiGGS: RAM used by kernel 3 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[2, local]:
 ** BuildHiGGS: RAM used by kernel 2 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[15, local]:
 ** BuildHiGGS: RAM used by kernel 15 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[7, local]:
 ** BuildHiGGS: RAM used by kernel 7 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[9, local]:
 ** BuildHiGGS: RAM used by kernel 9 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[2, local]:
 ** BuildHiGGS: RAM used by kernel 2 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[1, local]:
 ** BuildHiGGS: RAM used by kernel 1 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[14, local]:
 ** BuildHiGGS: RAM used by kernel 14 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[6, local]:
 ** BuildHiGGS: RAM used by kernel 6 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[1, local]:
 ** BuildHiGGS: RAM used by kernel 1 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[8, local]:
 ** BuildHiGGS: RAM used by kernel 8 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[13, local]:
 ** BuildHiGGS: RAM used by kernel 13 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[5, local]:
 ** BuildHiGGS: RAM used by kernel 5 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[7, local]:
 ** BuildHiGGS: RAM used by kernel 7 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[12, local]:
 ** BuildHiGGS: RAM used by kernel 12 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[4, local]:
 ** BuildHiGGS: RAM used by kernel 4 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[6, local]:
 ** BuildHiGGS: RAM used by kernel 6 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[11, local]:
 ** BuildHiGGS: RAM used by kernel 11 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[3, local]:
 ** BuildHiGGS: RAM used by kernel 3 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[5, local]:
 ** BuildHiGGS: RAM used by kernel 5 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[10, local]:
 ** BuildHiGGS: RAM used by kernel 10 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[2, local]:
 ** BuildHiGGS: RAM used by kernel 2 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[4, local]:
 ** BuildHiGGS: RAM used by kernel 4 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[9, local]:
 ** BuildHiGGS: RAM used by kernel 9 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[1, local]:
 ** BuildHiGGS: RAM used by kernel 1 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[3, local]:
 ** BuildHiGGS: RAM used by kernel 3 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[8, local]:
 ** BuildHiGGS: RAM used by kernel 8 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[2, local]:
 ** BuildHiGGS: RAM used by kernel 2 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[7, local]:
 ** BuildHiGGS: RAM used by kernel 7 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[1, local]:
 ** BuildHiGGS: RAM used by kernel 1 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[6, local]:
 ** BuildHiGGS: RAM used by kernel 6 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[5, local]:
 ** BuildHiGGS: RAM used by kernel 5 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[4, local]:
 ** BuildHiGGS: RAM used by kernel 4 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[3, local]:
 ** BuildHiGGS: RAM used by kernel 3 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[2, local]:
 ** BuildHiGGS: RAM used by kernel 2 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

From KernelObject[1, local]:
 ** BuildHiGGS: RAM used by kernel 1 is 
 
>   Dynamic[Refresh[MemoryInUse[], UpdateInterval -> 1]] bytes.

