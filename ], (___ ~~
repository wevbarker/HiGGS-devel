(* this file provides the induced derivative *)
(*
GPSymb="\!\(\*SuperscriptBox[OverscriptBox[\(\[Eta]\), \(^\)], \(\[DoubleVerticalBar]\)]\)";

LorentzGaugeCovQSymbBasic="\!\(\*SuperscriptBox[\(\[ScriptCapitalQ]\), \(\[DoubleVerticalBar]\)]\)";
LorentzGaugeCovQSymb=SO3~StringJoin~LorentzGaugeCovQSymbBasic;

LorentzGaugeCovDSymbBasic="\!\(\*SuperscriptBox[\(\[ScriptCapitalD]\), \(\[DoubleVerticalBar]\)]\)";
LorentzGaugeCovDSymb=SO3~StringJoin~LorentzGaugeCovDSymbBasic;

Quiet@UndefTensor@PerturbationGP;  (*we find using VisitorsOf that the calling of xPert automatically assigns PerturbationG, so we need to remove it first*)
Quiet@UndefMetric@GP;
DefMetric[1,GP[-a,-b],CDP,{"~",LorentzGaugeCovQSymb},InducedFrom->{G,V},PrintAs->GPSymb];

Catch@UndefCovD@ProjectedLorentzGaugeCovD;
DefCovD[ProjectedLorentzGaugeCovD[-a],{"~",LorentzGaugeCovDSymb},FromMetric->G,OrthogonalTo->{V}];
*)

ProjectLorentzGaugeCovDRule={};
ExpandLorentzGaugeCovDProjectionRule={};

PrecomputeDerivativeProjections[TensorHead_?xTensorQ]:=Catch@Module[{
GradientToProject,
ExpandedExpr},		
	GradientToProject=Global`LorentzGaugeCovD[-Global`z]@(TensorHead@@(("Global`"~SymbolJoin~#)&/@(Alphabet[][[1;;(Length@SlotsOfTensor@TensorHead)]])));

	ExpandedExpr=GradientToProject~InducedDecomposition~{Global`GP,Global`V};
	ExpandedExpr//=NoScalar;
	ExpandedExpr//=ToNewCanonical;
	ProjectLorentzGaugeCovDRule=ProjectLorentzGaugeCovDRule~Join~MakeRule[{Evaluate@GradientToProject,Evaluate@ExpandedExpr},MetricOn->All,ContractMetrics->True];

	ProjectionToExpand=Global`ProjectorGP@GradientToProject;
	ExpandedExpr=ProjectWith[Global`GP]@First@(List@@ProjectionToExpand);
	ExpandedExpr//=ProjectorToMetric;
	ExpandedExpr//=ToNewCanonical;
	ExpandLorentzGaugeCovDProjectionRule=ExpandLorentzGaugeCovDProjectionRule~Join~MakeRule[{Evaluate@ProjectionToExpand,Evaluate@ExpandedExpr},MetricOn->All,ContractMetrics->True];
];


Print@(Cases[$Tensors,]);
